!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.sankey_graph=t():e.sankey_graph=t()}(window,(function(){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var i=t[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(r,i,function(t){return e[t]}.bind(null,i));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=63)}({0:function(e,t,n){"use strict";e.exports=n(50)},1:function(e,t,n){"use strict";var r={value:()=>{}};function i(){for(var e,t=0,n=arguments.length,r={};t<n;++t){if(!(e=arguments[t]+"")||e in r||/[\s.]/.test(e))throw new Error("illegal type: "+e);r[e]=[]}return new o(r)}function o(e){this._=e}function l(e,t){for(var n,r=0,i=e.length;r<i;++r)if((n=e[r]).name===t)return n.value}function a(e,t,n){for(var i=0,o=e.length;i<o;++i)if(e[i].name===t){e[i]=r,e=e.slice(0,i).concat(e.slice(i+1));break}return null!=n&&e.push({name:t,value:n}),e}o.prototype=i.prototype={constructor:o,on:function(e,t){var n,r=this._,i=function(e,t){return e.trim().split(/^|\s+/).map((function(e){var n="",r=e.indexOf(".");if(r>=0&&(n=e.slice(r+1),e=e.slice(0,r)),e&&!t.hasOwnProperty(e))throw new Error("unknown type: "+e);return{type:e,name:n}}))}(e+"",r),o=-1,u=i.length;if(!(arguments.length<2)){if(null!=t&&"function"!=typeof t)throw new Error("invalid callback: "+t);for(;++o<u;)if(n=(e=i[o]).type)r[n]=a(r[n],e.name,t);else if(null==t)for(n in r)r[n]=a(r[n],e.name,null);return this}for(;++o<u;)if((n=(e=i[o]).type)&&(n=l(r[n],e.name)))return n},copy:function(){var e={},t=this._;for(var n in t)e[n]=t[n].slice();return new o(e)},call:function(e,t){if((n=arguments.length-2)>0)for(var n,r,i=new Array(n),o=0;o<n;++o)i[o]=arguments[o+2];if(!this._.hasOwnProperty(e))throw new Error("unknown type: "+e);for(o=0,n=(r=this._[e]).length;o<n;++o)r[o].value.apply(t,i)},apply:function(e,t,n){if(!this._.hasOwnProperty(e))throw new Error("unknown type: "+e);for(var r=this._[e],i=0,o=r.length;i<o;++i)r[i].value.apply(t,n)}};var u=i;function s(){}var c=function(e){return null==e?s:function(){return this.querySelector(e)}};function f(e){return null==e?[]:Array.isArray(e)?e:Array.from(e)}function d(){return[]}var p=function(e){return null==e?d:function(){return this.querySelectorAll(e)}},h=function(e){return function(){return this.matches(e)}};function m(e){return function(t){return t.matches(e)}}var y=Array.prototype.find;function g(){return this.firstElementChild}var v=Array.prototype.filter;function b(){return Array.from(this.children)}var w=function(e){return new Array(e.length)};function k(e,t){this.ownerDocument=e.ownerDocument,this.namespaceURI=e.namespaceURI,this._next=null,this._parent=e,this.__data__=t}function x(e,t,n,r,i,o){for(var l,a=0,u=t.length,s=o.length;a<s;++a)(l=t[a])?(l.__data__=o[a],r[a]=l):n[a]=new k(e,o[a]);for(;a<u;++a)(l=t[a])&&(i[a]=l)}function _(e,t,n,r,i,o,l){var a,u,s,c=new Map,f=t.length,d=o.length,p=new Array(f);for(a=0;a<f;++a)(u=t[a])&&(p[a]=s=l.call(u,u.__data__,a,t)+"",c.has(s)?i[a]=u:c.set(s,u));for(a=0;a<d;++a)s=l.call(e,o[a],a,o)+"",(u=c.get(s))?(r[a]=u,u.__data__=o[a],c.delete(s)):n[a]=new k(e,o[a]);for(a=0;a<f;++a)(u=t[a])&&c.get(p[a])===u&&(i[a]=u)}function E(e){return e.__data__}function T(e){return"object"==typeof e&&"length"in e?e:Array.from(e)}function S(e,t){return e<t?-1:e>t?1:e>=t?0:NaN}k.prototype={constructor:k,appendChild:function(e){return this._parent.insertBefore(e,this._next)},insertBefore:function(e,t){return this._parent.insertBefore(e,t)},querySelector:function(e){return this._parent.querySelector(e)},querySelectorAll:function(e){return this._parent.querySelectorAll(e)}};var C="http://www.w3.org/1999/xhtml",P={svg:"http://www.w3.org/2000/svg",xhtml:C,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"},N=function(e){var t=e+="",n=t.indexOf(":");return n>=0&&"xmlns"!==(t=e.slice(0,n))&&(e=e.slice(n+1)),P.hasOwnProperty(t)?{space:P[t],local:e}:e},M=function(e){return e.ownerDocument&&e.ownerDocument.defaultView||e.document&&e||e.defaultView};function O(e,t){return e.style.getPropertyValue(t)||M(e).getComputedStyle(e,null).getPropertyValue(t)}function z(e){return e.trim().split(/^|\s+/)}function A(e){return e.classList||new R(e)}function R(e){this._node=e,this._names=z(e.getAttribute("class")||"")}function L(e,t){for(var n=A(e),r=-1,i=t.length;++r<i;)n.add(t[r])}function I(e,t){for(var n=A(e),r=-1,i=t.length;++r<i;)n.remove(t[r])}function D(){this.textContent=""}function F(){this.innerHTML=""}function $(){this.nextSibling&&this.parentNode.appendChild(this)}function j(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}R.prototype={add:function(e){this._names.indexOf(e)<0&&(this._names.push(e),this._node.setAttribute("class",this._names.join(" ")))},remove:function(e){var t=this._names.indexOf(e);t>=0&&(this._names.splice(t,1),this._node.setAttribute("class",this._names.join(" ")))},contains:function(e){return this._names.indexOf(e)>=0}};var U=function(e){var t=N(e);return(t.local?function(e){return function(){return this.ownerDocument.createElementNS(e.space,e.local)}}:function(e){return function(){var t=this.ownerDocument,n=this.namespaceURI;return n===C&&t.documentElement.namespaceURI===C?t.createElement(e):t.createElementNS(n,e)}})(t)};function V(){return null}function W(){var e=this.parentNode;e&&e.removeChild(this)}function H(){var e=this.cloneNode(!1),t=this.parentNode;return t?t.insertBefore(e,this.nextSibling):e}function q(){var e=this.cloneNode(!0),t=this.parentNode;return t?t.insertBefore(e,this.nextSibling):e}function Q(e){return function(){var t=this.__on;if(t){for(var n,r=0,i=-1,o=t.length;r<o;++r)n=t[r],e.type&&n.type!==e.type||n.name!==e.name?t[++i]=n:this.removeEventListener(n.type,n.listener,n.options);++i?t.length=i:delete this.__on}}}function B(e,t,n){return function(){var r,i=this.__on,o=function(e){return function(t){e.call(this,t,this.__data__)}}(t);if(i)for(var l=0,a=i.length;l<a;++l)if((r=i[l]).type===e.type&&r.name===e.name)return this.removeEventListener(r.type,r.listener,r.options),this.addEventListener(r.type,r.listener=o,r.options=n),void(r.value=t);this.addEventListener(e.type,o,n),r={type:e.type,name:e.name,value:t,listener:o,options:n},i?i.push(r):this.__on=[r]}}function K(e,t,n){var r=M(e),i=r.CustomEvent;"function"==typeof i?i=new i(t,n):(i=r.document.createEvent("Event"),n?(i.initEvent(t,n.bubbles,n.cancelable),i.detail=n.detail):i.initEvent(t,!1,!1)),e.dispatchEvent(i)}var X=[null];function Y(e,t){this._groups=e,this._parents=t}function G(){return new Y([[document.documentElement]],X)}Y.prototype=G.prototype={constructor:Y,select:function(e){"function"!=typeof e&&(e=c(e));for(var t=this._groups,n=t.length,r=new Array(n),i=0;i<n;++i)for(var o,l,a=t[i],u=a.length,s=r[i]=new Array(u),f=0;f<u;++f)(o=a[f])&&(l=e.call(o,o.__data__,f,a))&&("__data__"in o&&(l.__data__=o.__data__),s[f]=l);return new Y(r,this._parents)},selectAll:function(e){e="function"==typeof e?function(e){return function(){return f(e.apply(this,arguments))}}(e):p(e);for(var t=this._groups,n=t.length,r=[],i=[],o=0;o<n;++o)for(var l,a=t[o],u=a.length,s=0;s<u;++s)(l=a[s])&&(r.push(e.call(l,l.__data__,s,a)),i.push(l));return new Y(r,i)},selectChild:function(e){return this.select(null==e?g:function(e){return function(){return y.call(this.children,e)}}("function"==typeof e?e:m(e)))},selectChildren:function(e){return this.selectAll(null==e?b:function(e){return function(){return v.call(this.children,e)}}("function"==typeof e?e:m(e)))},filter:function(e){"function"!=typeof e&&(e=h(e));for(var t=this._groups,n=t.length,r=new Array(n),i=0;i<n;++i)for(var o,l=t[i],a=l.length,u=r[i]=[],s=0;s<a;++s)(o=l[s])&&e.call(o,o.__data__,s,l)&&u.push(o);return new Y(r,this._parents)},data:function(e,t){if(!arguments.length)return Array.from(this,E);var n=t?_:x,r=this._parents,i=this._groups;"function"!=typeof e&&(e=function(e){return function(){return e}}(e));for(var o=i.length,l=new Array(o),a=new Array(o),u=new Array(o),s=0;s<o;++s){var c=r[s],f=i[s],d=f.length,p=T(e.call(c,c&&c.__data__,s,r)),h=p.length,m=a[s]=new Array(h),y=l[s]=new Array(h);n(c,f,m,y,u[s]=new Array(d),p,t);for(var g,v,b=0,w=0;b<h;++b)if(g=m[b]){for(b>=w&&(w=b+1);!(v=y[w])&&++w<h;);g._next=v||null}}return(l=new Y(l,r))._enter=a,l._exit=u,l},enter:function(){return new Y(this._enter||this._groups.map(w),this._parents)},exit:function(){return new Y(this._exit||this._groups.map(w),this._parents)},join:function(e,t,n){var r=this.enter(),i=this,o=this.exit();return"function"==typeof e?(r=e(r))&&(r=r.selection()):r=r.append(e+""),null!=t&&(i=t(i))&&(i=i.selection()),null==n?o.remove():n(o),r&&i?r.merge(i).order():i},merge:function(e){for(var t=e.selection?e.selection():e,n=this._groups,r=t._groups,i=n.length,o=r.length,l=Math.min(i,o),a=new Array(i),u=0;u<l;++u)for(var s,c=n[u],f=r[u],d=c.length,p=a[u]=new Array(d),h=0;h<d;++h)(s=c[h]||f[h])&&(p[h]=s);for(;u<i;++u)a[u]=n[u];return new Y(a,this._parents)},selection:function(){return this},order:function(){for(var e=this._groups,t=-1,n=e.length;++t<n;)for(var r,i=e[t],o=i.length-1,l=i[o];--o>=0;)(r=i[o])&&(l&&4^r.compareDocumentPosition(l)&&l.parentNode.insertBefore(r,l),l=r);return this},sort:function(e){function t(t,n){return t&&n?e(t.__data__,n.__data__):!t-!n}e||(e=S);for(var n=this._groups,r=n.length,i=new Array(r),o=0;o<r;++o){for(var l,a=n[o],u=a.length,s=i[o]=new Array(u),c=0;c<u;++c)(l=a[c])&&(s[c]=l);s.sort(t)}return new Y(i,this._parents).order()},call:function(){var e=arguments[0];return arguments[0]=this,e.apply(null,arguments),this},nodes:function(){return Array.from(this)},node:function(){for(var e=this._groups,t=0,n=e.length;t<n;++t)for(var r=e[t],i=0,o=r.length;i<o;++i){var l=r[i];if(l)return l}return null},size:function(){let e=0;for(const t of this)++e;return e},empty:function(){return!this.node()},each:function(e){for(var t=this._groups,n=0,r=t.length;n<r;++n)for(var i,o=t[n],l=0,a=o.length;l<a;++l)(i=o[l])&&e.call(i,i.__data__,l,o);return this},attr:function(e,t){var n=N(e);if(arguments.length<2){var r=this.node();return n.local?r.getAttributeNS(n.space,n.local):r.getAttribute(n)}return this.each((null==t?n.local?function(e){return function(){this.removeAttributeNS(e.space,e.local)}}:function(e){return function(){this.removeAttribute(e)}}:"function"==typeof t?n.local?function(e,t){return function(){var n=t.apply(this,arguments);null==n?this.removeAttributeNS(e.space,e.local):this.setAttributeNS(e.space,e.local,n)}}:function(e,t){return function(){var n=t.apply(this,arguments);null==n?this.removeAttribute(e):this.setAttribute(e,n)}}:n.local?function(e,t){return function(){this.setAttributeNS(e.space,e.local,t)}}:function(e,t){return function(){this.setAttribute(e,t)}})(n,t))},style:function(e,t,n){return arguments.length>1?this.each((null==t?function(e){return function(){this.style.removeProperty(e)}}:"function"==typeof t?function(e,t,n){return function(){var r=t.apply(this,arguments);null==r?this.style.removeProperty(e):this.style.setProperty(e,r,n)}}:function(e,t,n){return function(){this.style.setProperty(e,t,n)}})(e,t,null==n?"":n)):O(this.node(),e)},property:function(e,t){return arguments.length>1?this.each((null==t?function(e){return function(){delete this[e]}}:"function"==typeof t?function(e,t){return function(){var n=t.apply(this,arguments);null==n?delete this[e]:this[e]=n}}:function(e,t){return function(){this[e]=t}})(e,t)):this.node()[e]},classed:function(e,t){var n=z(e+"");if(arguments.length<2){for(var r=A(this.node()),i=-1,o=n.length;++i<o;)if(!r.contains(n[i]))return!1;return!0}return this.each(("function"==typeof t?function(e,t){return function(){(t.apply(this,arguments)?L:I)(this,e)}}:t?function(e){return function(){L(this,e)}}:function(e){return function(){I(this,e)}})(n,t))},text:function(e){return arguments.length?this.each(null==e?D:("function"==typeof e?function(e){return function(){var t=e.apply(this,arguments);this.textContent=null==t?"":t}}:function(e){return function(){this.textContent=e}})(e)):this.node().textContent},html:function(e){return arguments.length?this.each(null==e?F:("function"==typeof e?function(e){return function(){var t=e.apply(this,arguments);this.innerHTML=null==t?"":t}}:function(e){return function(){this.innerHTML=e}})(e)):this.node().innerHTML},raise:function(){return this.each($)},lower:function(){return this.each(j)},append:function(e){var t="function"==typeof e?e:U(e);return this.select((function(){return this.appendChild(t.apply(this,arguments))}))},insert:function(e,t){var n="function"==typeof e?e:U(e),r=null==t?V:"function"==typeof t?t:c(t);return this.select((function(){return this.insertBefore(n.apply(this,arguments),r.apply(this,arguments)||null)}))},remove:function(){return this.each(W)},clone:function(e){return this.select(e?q:H)},datum:function(e){return arguments.length?this.property("__data__",e):this.node().__data__},on:function(e,t,n){var r,i,o=function(e){return e.trim().split(/^|\s+/).map((function(e){var t="",n=e.indexOf(".");return n>=0&&(t=e.slice(n+1),e=e.slice(0,n)),{type:e,name:t}}))}(e+""),l=o.length;if(!(arguments.length<2)){for(a=t?B:Q,r=0;r<l;++r)this.each(a(o[r],t,n));return this}var a=this.node().__on;if(a)for(var u,s=0,c=a.length;s<c;++s)for(r=0,u=a[s];r<l;++r)if((i=o[r]).type===u.type&&i.name===u.name)return u.value},dispatch:function(e,t){return this.each(("function"==typeof t?function(e,t){return function(){return K(this,e,t.apply(this,arguments))}}:function(e,t){return function(){return K(this,e,t)}})(e,t))},[Symbol.iterator]:function*(){for(var e=this._groups,t=0,n=e.length;t<n;++t)for(var r,i=e[t],o=0,l=i.length;o<l;++o)(r=i[o])&&(yield r)}};var Z=G,J=function(e){return"string"==typeof e?new Y([[document.querySelector(e)]],[document.documentElement]):new Y([[e]],X)},ee=function(e,t,n){e.prototype=t.prototype=n,n.constructor=e};function te(e,t){var n=Object.create(e.prototype);for(var r in t)n[r]=t[r];return n}function ne(){}var re="\\s*([+-]?\\d+)\\s*",ie="\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)\\s*",oe="\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)%\\s*",le=/^#([0-9a-f]{3,8})$/,ae=new RegExp(`^rgb\\(${re},${re},${re}\\)$`),ue=new RegExp(`^rgb\\(${oe},${oe},${oe}\\)$`),se=new RegExp(`^rgba\\(${re},${re},${re},${ie}\\)$`),ce=new RegExp(`^rgba\\(${oe},${oe},${oe},${ie}\\)$`),fe=new RegExp(`^hsl\\(${ie},${oe},${oe}\\)$`),de=new RegExp(`^hsla\\(${ie},${oe},${oe},${ie}\\)$`),pe={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};function he(){return this.rgb().formatHex()}function me(){return this.rgb().formatRgb()}function ye(e){var t,n;return e=(e+"").trim().toLowerCase(),(t=le.exec(e))?(n=t[1].length,t=parseInt(t[1],16),6===n?ge(t):3===n?new we(t>>8&15|t>>4&240,t>>4&15|240&t,(15&t)<<4|15&t,1):8===n?ve(t>>24&255,t>>16&255,t>>8&255,(255&t)/255):4===n?ve(t>>12&15|t>>8&240,t>>8&15|t>>4&240,t>>4&15|240&t,((15&t)<<4|15&t)/255):null):(t=ae.exec(e))?new we(t[1],t[2],t[3],1):(t=ue.exec(e))?new we(255*t[1]/100,255*t[2]/100,255*t[3]/100,1):(t=se.exec(e))?ve(t[1],t[2],t[3],t[4]):(t=ce.exec(e))?ve(255*t[1]/100,255*t[2]/100,255*t[3]/100,t[4]):(t=fe.exec(e))?Se(t[1],t[2]/100,t[3]/100,1):(t=de.exec(e))?Se(t[1],t[2]/100,t[3]/100,t[4]):pe.hasOwnProperty(e)?ge(pe[e]):"transparent"===e?new we(NaN,NaN,NaN,0):null}function ge(e){return new we(e>>16&255,e>>8&255,255&e,1)}function ve(e,t,n,r){return r<=0&&(e=t=n=NaN),new we(e,t,n,r)}function be(e,t,n,r){return 1===arguments.length?function(e){return e instanceof ne||(e=ye(e)),e?new we((e=e.rgb()).r,e.g,e.b,e.opacity):new we}(e):new we(e,t,n,null==r?1:r)}function we(e,t,n,r){this.r=+e,this.g=+t,this.b=+n,this.opacity=+r}function ke(){return`#${Te(this.r)}${Te(this.g)}${Te(this.b)}`}function xe(){const e=_e(this.opacity);return`${1===e?"rgb(":"rgba("}${Ee(this.r)}, ${Ee(this.g)}, ${Ee(this.b)}${1===e?")":`, ${e})`}`}function _e(e){return isNaN(e)?1:Math.max(0,Math.min(1,e))}function Ee(e){return Math.max(0,Math.min(255,Math.round(e)||0))}function Te(e){return((e=Ee(e))<16?"0":"")+e.toString(16)}function Se(e,t,n,r){return r<=0?e=t=n=NaN:n<=0||n>=1?e=t=NaN:t<=0&&(e=NaN),new Pe(e,t,n,r)}function Ce(e){if(e instanceof Pe)return new Pe(e.h,e.s,e.l,e.opacity);if(e instanceof ne||(e=ye(e)),!e)return new Pe;if(e instanceof Pe)return e;var t=(e=e.rgb()).r/255,n=e.g/255,r=e.b/255,i=Math.min(t,n,r),o=Math.max(t,n,r),l=NaN,a=o-i,u=(o+i)/2;return a?(l=t===o?(n-r)/a+6*(n<r):n===o?(r-t)/a+2:(t-n)/a+4,a/=u<.5?o+i:2-o-i,l*=60):a=u>0&&u<1?0:l,new Pe(l,a,u,e.opacity)}function Pe(e,t,n,r){this.h=+e,this.s=+t,this.l=+n,this.opacity=+r}function Ne(e){return(e=(e||0)%360)<0?e+360:e}function Me(e){return Math.max(0,Math.min(1,e||0))}function Oe(e,t,n){return 255*(e<60?t+(n-t)*e/60:e<180?n:e<240?t+(n-t)*(240-e)/60:t)}function ze(e,t,n,r,i){var o=e*e,l=o*e;return((1-3*e+3*o-l)*t+(4-6*o+3*l)*n+(1+3*e+3*o-3*l)*r+l*i)/6}ee(ne,ye,{copy(e){return Object.assign(new this.constructor,this,e)},displayable(){return this.rgb().displayable()},hex:he,formatHex:he,formatHex8:function(){return this.rgb().formatHex8()},formatHsl:function(){return Ce(this).formatHsl()},formatRgb:me,toString:me}),ee(we,be,te(ne,{brighter(e){return e=null==e?1/.7:Math.pow(1/.7,e),new we(this.r*e,this.g*e,this.b*e,this.opacity)},darker(e){return e=null==e?.7:Math.pow(.7,e),new we(this.r*e,this.g*e,this.b*e,this.opacity)},rgb(){return this},clamp(){return new we(Ee(this.r),Ee(this.g),Ee(this.b),_e(this.opacity))},displayable(){return-.5<=this.r&&this.r<255.5&&-.5<=this.g&&this.g<255.5&&-.5<=this.b&&this.b<255.5&&0<=this.opacity&&this.opacity<=1},hex:ke,formatHex:ke,formatHex8:function(){return`#${Te(this.r)}${Te(this.g)}${Te(this.b)}${Te(255*(isNaN(this.opacity)?1:this.opacity))}`},formatRgb:xe,toString:xe})),ee(Pe,(function(e,t,n,r){return 1===arguments.length?Ce(e):new Pe(e,t,n,null==r?1:r)}),te(ne,{brighter(e){return e=null==e?1/.7:Math.pow(1/.7,e),new Pe(this.h,this.s,this.l*e,this.opacity)},darker(e){return e=null==e?.7:Math.pow(.7,e),new Pe(this.h,this.s,this.l*e,this.opacity)},rgb(){var e=this.h%360+360*(this.h<0),t=isNaN(e)||isNaN(this.s)?0:this.s,n=this.l,r=n+(n<.5?n:1-n)*t,i=2*n-r;return new we(Oe(e>=240?e-240:e+120,i,r),Oe(e,i,r),Oe(e<120?e+240:e-120,i,r),this.opacity)},clamp(){return new Pe(Ne(this.h),Me(this.s),Me(this.l),_e(this.opacity))},displayable(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1},formatHsl(){const e=_e(this.opacity);return`${1===e?"hsl(":"hsla("}${Ne(this.h)}, ${100*Me(this.s)}%, ${100*Me(this.l)}%${1===e?")":`, ${e})`}`}}));var Ae=e=>()=>e;function Re(e,t){var n=t-e;return n?function(e,t){return function(n){return e+n*t}}(e,n):Ae(isNaN(e)?t:e)}var Le=function e(t){var n=function(e){return 1==(e=+e)?Re:function(t,n){return n-t?function(e,t,n){return e=Math.pow(e,n),t=Math.pow(t,n)-e,n=1/n,function(r){return Math.pow(e+r*t,n)}}(t,n,e):Ae(isNaN(t)?n:t)}}(t);function r(e,t){var r=n((e=be(e)).r,(t=be(t)).r),i=n(e.g,t.g),o=n(e.b,t.b),l=Re(e.opacity,t.opacity);return function(t){return e.r=r(t),e.g=i(t),e.b=o(t),e.opacity=l(t),e+""}}return r.gamma=e,r}(1);function Ie(e){return function(t){var n,r,i=t.length,o=new Array(i),l=new Array(i),a=new Array(i);for(n=0;n<i;++n)r=be(t[n]),o[n]=r.r||0,l[n]=r.g||0,a[n]=r.b||0;return o=e(o),l=e(l),a=e(a),r.opacity=1,function(e){return r.r=o(e),r.g=l(e),r.b=a(e),r+""}}}Ie((function(e){var t=e.length-1;return function(n){var r=n<=0?n=0:n>=1?(n=1,t-1):Math.floor(n*t),i=e[r],o=e[r+1],l=r>0?e[r-1]:2*i-o,a=r<t-1?e[r+2]:2*o-i;return ze((n-r/t)*t,l,i,o,a)}})),Ie((function(e){var t=e.length;return function(n){var r=Math.floor(((n%=1)<0?++n:n)*t),i=e[(r+t-1)%t],o=e[r%t],l=e[(r+1)%t],a=e[(r+2)%t];return ze((n-r/t)*t,i,o,l,a)}}));var De,Fe,$e=function(e,t){return e=+e,t=+t,function(n){return e*(1-n)+t*n}},je=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,Ue=new RegExp(je.source,"g"),Ve=function(e,t){var n,r,i,o=je.lastIndex=Ue.lastIndex=0,l=-1,a=[],u=[];for(e+="",t+="";(n=je.exec(e))&&(r=Ue.exec(t));)(i=r.index)>o&&(i=t.slice(o,i),a[l]?a[l]+=i:a[++l]=i),(n=n[0])===(r=r[0])?a[l]?a[l]+=r:a[++l]=r:(a[++l]=null,u.push({i:l,x:$e(n,r)})),o=Ue.lastIndex;return o<t.length&&(i=t.slice(o),a[l]?a[l]+=i:a[++l]=i),a.length<2?u[0]?function(e){return function(t){return e(t)+""}}(u[0].x):function(e){return function(){return e}}(t):(t=u.length,function(e){for(var n,r=0;r<t;++r)a[(n=u[r]).i]=n.x(e);return a.join("")})},We=0,He=0,qe=0,Qe=0,Be=0,Ke=0,Xe="object"==typeof performance&&performance.now?performance:Date,Ye="object"==typeof window&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(e){setTimeout(e,17)};function Ge(){return Be||(Ye(Ze),Be=Xe.now()+Ke)}function Ze(){Be=0}function Je(){this._call=this._time=this._next=null}function et(e,t,n){var r=new Je;return r.restart(e,t,n),r}function tt(){Be=(Qe=Xe.now())+Ke,We=He=0;try{!function(){Ge(),++We;for(var e,t=De;t;)(e=Be-t._time)>=0&&t._call.call(void 0,e),t=t._next;--We}()}finally{We=0,function(){for(var e,t,n=De,r=1/0;n;)n._call?(r>n._time&&(r=n._time),e=n,n=n._next):(t=n._next,n._next=null,n=e?e._next=t:De=t);Fe=e,rt(r)}(),Be=0}}function nt(){var e=Xe.now(),t=e-Qe;t>1e3&&(Ke-=t,Qe=e)}function rt(e){We||(He&&(He=clearTimeout(He)),e-Be>24?(e<1/0&&(He=setTimeout(tt,e-Xe.now()-Ke)),qe&&(qe=clearInterval(qe))):(qe||(Qe=Xe.now(),qe=setInterval(nt,1e3)),We=1,Ye(tt)))}Je.prototype=et.prototype={constructor:Je,restart:function(e,t,n){if("function"!=typeof e)throw new TypeError("callback is not a function");n=(null==n?Ge():+n)+(null==t?0:+t),this._next||Fe===this||(Fe?Fe._next=this:De=this,Fe=this),this._call=e,this._time=n,rt()},stop:function(){this._call&&(this._call=null,this._time=1/0,rt())}};var it=function(e,t,n){var r=new Je;return t=null==t?0:+t,r.restart(n=>{r.stop(),e(n+t)},t,n),r},ot=u("start","end","cancel","interrupt"),lt=[],at=function(e,t,n,r,i,o){var l=e.__transition;if(l){if(n in l)return}else e.__transition={};!function(e,t,n){var r,i=e.__transition;function o(u){var s,c,f,d;if(1!==n.state)return a();for(s in i)if((d=i[s]).name===n.name){if(3===d.state)return it(o);4===d.state?(d.state=6,d.timer.stop(),d.on.call("interrupt",e,e.__data__,d.index,d.group),delete i[s]):+s<t&&(d.state=6,d.timer.stop(),d.on.call("cancel",e,e.__data__,d.index,d.group),delete i[s])}if(it((function(){3===n.state&&(n.state=4,n.timer.restart(l,n.delay,n.time),l(u))})),n.state=2,n.on.call("start",e,e.__data__,n.index,n.group),2===n.state){for(n.state=3,r=new Array(f=n.tween.length),s=0,c=-1;s<f;++s)(d=n.tween[s].value.call(e,e.__data__,n.index,n.group))&&(r[++c]=d);r.length=c+1}}function l(t){for(var i=t<n.duration?n.ease.call(null,t/n.duration):(n.timer.restart(a),n.state=5,1),o=-1,l=r.length;++o<l;)r[o].call(e,i);5===n.state&&(n.on.call("end",e,e.__data__,n.index,n.group),a())}function a(){for(var r in n.state=6,n.timer.stop(),delete i[t],i)return;delete e.__transition}i[t]=n,n.timer=et((function(e){n.state=1,n.timer.restart(o,n.delay,n.time),n.delay<=e&&o(e-n.delay)}),0,n.time)}(e,n,{name:t,index:r,group:i,on:ot,tween:lt,time:o.time,delay:o.delay,duration:o.duration,ease:o.ease,timer:null,state:0})};function ut(e,t){var n=ct(e,t);if(n.state>0)throw new Error("too late; already scheduled");return n}function st(e,t){var n=ct(e,t);if(n.state>3)throw new Error("too late; already running");return n}function ct(e,t){var n=e.__transition;if(!n||!(n=n[t]))throw new Error("transition not found");return n}var ft,dt=180/Math.PI,pt={translateX:0,translateY:0,rotate:0,skewX:0,scaleX:1,scaleY:1},ht=function(e,t,n,r,i,o){var l,a,u;return(l=Math.sqrt(e*e+t*t))&&(e/=l,t/=l),(u=e*n+t*r)&&(n-=e*u,r-=t*u),(a=Math.sqrt(n*n+r*r))&&(n/=a,r/=a,u/=a),e*r<t*n&&(e=-e,t=-t,u=-u,l=-l),{translateX:i,translateY:o,rotate:Math.atan2(t,e)*dt,skewX:Math.atan(u)*dt,scaleX:l,scaleY:a}};function mt(e,t,n,r){function i(e){return e.length?e.pop()+" ":""}return function(o,l){var a=[],u=[];return o=e(o),l=e(l),function(e,r,i,o,l,a){if(e!==i||r!==o){var u=l.push("translate(",null,t,null,n);a.push({i:u-4,x:$e(e,i)},{i:u-2,x:$e(r,o)})}else(i||o)&&l.push("translate("+i+t+o+n)}(o.translateX,o.translateY,l.translateX,l.translateY,a,u),function(e,t,n,o){e!==t?(e-t>180?t+=360:t-e>180&&(e+=360),o.push({i:n.push(i(n)+"rotate(",null,r)-2,x:$e(e,t)})):t&&n.push(i(n)+"rotate("+t+r)}(o.rotate,l.rotate,a,u),function(e,t,n,o){e!==t?o.push({i:n.push(i(n)+"skewX(",null,r)-2,x:$e(e,t)}):t&&n.push(i(n)+"skewX("+t+r)}(o.skewX,l.skewX,a,u),function(e,t,n,r,o,l){if(e!==n||t!==r){var a=o.push(i(o)+"scale(",null,",",null,")");l.push({i:a-4,x:$e(e,n)},{i:a-2,x:$e(t,r)})}else 1===n&&1===r||o.push(i(o)+"scale("+n+","+r+")")}(o.scaleX,o.scaleY,l.scaleX,l.scaleY,a,u),o=l=null,function(e){for(var t,n=-1,r=u.length;++n<r;)a[(t=u[n]).i]=t.x(e);return a.join("")}}}var yt=mt((function(e){const t=new("function"==typeof DOMMatrix?DOMMatrix:WebKitCSSMatrix)(e+"");return t.isIdentity?pt:ht(t.a,t.b,t.c,t.d,t.e,t.f)}),"px, ","px)","deg)"),gt=mt((function(e){return null==e?pt:(ft||(ft=document.createElementNS("http://www.w3.org/2000/svg","g")),ft.setAttribute("transform",e),(e=ft.transform.baseVal.consolidate())?(e=e.matrix,ht(e.a,e.b,e.c,e.d,e.e,e.f)):pt)}),", ",")",")");function vt(e,t,n){var r=e._id;return e.each((function(){var e=st(this,r);(e.value||(e.value={}))[t]=n.apply(this,arguments)})),function(e){return ct(e,r).value[t]}}var bt=function(e,t){var n;return("number"==typeof t?$e:t instanceof ye?Le:(n=ye(t))?(t=n,Le):Ve)(e,t)},wt=Z.prototype.constructor;function kt(e){return function(){this.style.removeProperty(e)}}var xt=0;function _t(e,t,n,r){this._groups=e,this._parents=t,this._name=n,this._id=r}function Et(){return++xt}var Tt=Z.prototype;_t.prototype=function(e){return Z().transition(e)}.prototype={constructor:_t,select:function(e){var t=this._name,n=this._id;"function"!=typeof e&&(e=c(e));for(var r=this._groups,i=r.length,o=new Array(i),l=0;l<i;++l)for(var a,u,s=r[l],f=s.length,d=o[l]=new Array(f),p=0;p<f;++p)(a=s[p])&&(u=e.call(a,a.__data__,p,s))&&("__data__"in a&&(u.__data__=a.__data__),d[p]=u,at(d[p],t,n,p,d,ct(a,n)));return new _t(o,this._parents,t,n)},selectAll:function(e){var t=this._name,n=this._id;"function"!=typeof e&&(e=p(e));for(var r=this._groups,i=r.length,o=[],l=[],a=0;a<i;++a)for(var u,s=r[a],c=s.length,f=0;f<c;++f)if(u=s[f]){for(var d,h=e.call(u,u.__data__,f,s),m=ct(u,n),y=0,g=h.length;y<g;++y)(d=h[y])&&at(d,t,n,y,h,m);o.push(h),l.push(u)}return new _t(o,l,t,n)},selectChild:Tt.selectChild,selectChildren:Tt.selectChildren,filter:function(e){"function"!=typeof e&&(e=h(e));for(var t=this._groups,n=t.length,r=new Array(n),i=0;i<n;++i)for(var o,l=t[i],a=l.length,u=r[i]=[],s=0;s<a;++s)(o=l[s])&&e.call(o,o.__data__,s,l)&&u.push(o);return new _t(r,this._parents,this._name,this._id)},merge:function(e){if(e._id!==this._id)throw new Error;for(var t=this._groups,n=e._groups,r=t.length,i=n.length,o=Math.min(r,i),l=new Array(r),a=0;a<o;++a)for(var u,s=t[a],c=n[a],f=s.length,d=l[a]=new Array(f),p=0;p<f;++p)(u=s[p]||c[p])&&(d[p]=u);for(;a<r;++a)l[a]=t[a];return new _t(l,this._parents,this._name,this._id)},selection:function(){return new wt(this._groups,this._parents)},transition:function(){for(var e=this._name,t=this._id,n=Et(),r=this._groups,i=r.length,o=0;o<i;++o)for(var l,a=r[o],u=a.length,s=0;s<u;++s)if(l=a[s]){var c=ct(l,t);at(l,e,n,s,a,{time:c.time+c.delay+c.duration,delay:0,duration:c.duration,ease:c.ease})}return new _t(r,this._parents,e,n)},call:Tt.call,nodes:Tt.nodes,node:Tt.node,size:Tt.size,empty:Tt.empty,each:Tt.each,on:function(e,t){var n=this._id;return arguments.length<2?ct(this.node(),n).on.on(e):this.each(function(e,t,n){var r,i,o=function(e){return(e+"").trim().split(/^|\s+/).every((function(e){var t=e.indexOf(".");return t>=0&&(e=e.slice(0,t)),!e||"start"===e}))}(t)?ut:st;return function(){var l=o(this,e),a=l.on;a!==r&&(i=(r=a).copy()).on(t,n),l.on=i}}(n,e,t))},attr:function(e,t){var n=N(e),r="transform"===n?gt:bt;return this.attrTween(e,"function"==typeof t?(n.local?function(e,t,n){var r,i,o;return function(){var l,a,u=n(this);if(null!=u)return(l=this.getAttributeNS(e.space,e.local))===(a=u+"")?null:l===r&&a===i?o:(i=a,o=t(r=l,u));this.removeAttributeNS(e.space,e.local)}}:function(e,t,n){var r,i,o;return function(){var l,a,u=n(this);if(null!=u)return(l=this.getAttribute(e))===(a=u+"")?null:l===r&&a===i?o:(i=a,o=t(r=l,u));this.removeAttribute(e)}})(n,r,vt(this,"attr."+e,t)):null==t?(n.local?function(e){return function(){this.removeAttributeNS(e.space,e.local)}}:function(e){return function(){this.removeAttribute(e)}})(n):(n.local?function(e,t,n){var r,i,o=n+"";return function(){var l=this.getAttributeNS(e.space,e.local);return l===o?null:l===r?i:i=t(r=l,n)}}:function(e,t,n){var r,i,o=n+"";return function(){var l=this.getAttribute(e);return l===o?null:l===r?i:i=t(r=l,n)}})(n,r,t))},attrTween:function(e,t){var n="attr."+e;if(arguments.length<2)return(n=this.tween(n))&&n._value;if(null==t)return this.tween(n,null);if("function"!=typeof t)throw new Error;var r=N(e);return this.tween(n,(r.local?function(e,t){var n,r;function i(){var i=t.apply(this,arguments);return i!==r&&(n=(r=i)&&function(e,t){return function(n){this.setAttributeNS(e.space,e.local,t.call(this,n))}}(e,i)),n}return i._value=t,i}:function(e,t){var n,r;function i(){var i=t.apply(this,arguments);return i!==r&&(n=(r=i)&&function(e,t){return function(n){this.setAttribute(e,t.call(this,n))}}(e,i)),n}return i._value=t,i})(r,t))},style:function(e,t,n){var r="transform"==(e+="")?yt:bt;return null==t?this.styleTween(e,function(e,t){var n,r,i;return function(){var o=O(this,e),l=(this.style.removeProperty(e),O(this,e));return o===l?null:o===n&&l===r?i:i=t(n=o,r=l)}}(e,r)).on("end.style."+e,kt(e)):"function"==typeof t?this.styleTween(e,function(e,t,n){var r,i,o;return function(){var l=O(this,e),a=n(this),u=a+"";return null==a&&(this.style.removeProperty(e),u=a=O(this,e)),l===u?null:l===r&&u===i?o:(i=u,o=t(r=l,a))}}(e,r,vt(this,"style."+e,t))).each(function(e,t){var n,r,i,o,l="style."+t,a="end."+l;return function(){var u=st(this,e),s=u.on,c=null==u.value[l]?o||(o=kt(t)):void 0;s===n&&i===c||(r=(n=s).copy()).on(a,i=c),u.on=r}}(this._id,e)):this.styleTween(e,function(e,t,n){var r,i,o=n+"";return function(){var l=O(this,e);return l===o?null:l===r?i:i=t(r=l,n)}}(e,r,t),n).on("end.style."+e,null)},styleTween:function(e,t,n){var r="style."+(e+="");if(arguments.length<2)return(r=this.tween(r))&&r._value;if(null==t)return this.tween(r,null);if("function"!=typeof t)throw new Error;return this.tween(r,function(e,t,n){var r,i;function o(){var o=t.apply(this,arguments);return o!==i&&(r=(i=o)&&function(e,t,n){return function(r){this.style.setProperty(e,t.call(this,r),n)}}(e,o,n)),r}return o._value=t,o}(e,t,null==n?"":n))},text:function(e){return this.tween("text","function"==typeof e?function(e){return function(){var t=e(this);this.textContent=null==t?"":t}}(vt(this,"text",e)):function(e){return function(){this.textContent=e}}(null==e?"":e+""))},textTween:function(e){var t="text";if(arguments.length<1)return(t=this.tween(t))&&t._value;if(null==e)return this.tween(t,null);if("function"!=typeof e)throw new Error;return this.tween(t,function(e){var t,n;function r(){var r=e.apply(this,arguments);return r!==n&&(t=(n=r)&&function(e){return function(t){this.textContent=e.call(this,t)}}(r)),t}return r._value=e,r}(e))},remove:function(){return this.on("end.remove",function(e){return function(){var t=this.parentNode;for(var n in this.__transition)if(+n!==e)return;t&&t.removeChild(this)}}(this._id))},tween:function(e,t){var n=this._id;if(e+="",arguments.length<2){for(var r,i=ct(this.node(),n).tween,o=0,l=i.length;o<l;++o)if((r=i[o]).name===e)return r.value;return null}return this.each((null==t?function(e,t){var n,r;return function(){var i=st(this,e),o=i.tween;if(o!==n)for(var l=0,a=(r=n=o).length;l<a;++l)if(r[l].name===t){(r=r.slice()).splice(l,1);break}i.tween=r}}:function(e,t,n){var r,i;if("function"!=typeof n)throw new Error;return function(){var o=st(this,e),l=o.tween;if(l!==r){i=(r=l).slice();for(var a={name:t,value:n},u=0,s=i.length;u<s;++u)if(i[u].name===t){i[u]=a;break}u===s&&i.push(a)}o.tween=i}})(n,e,t))},delay:function(e){var t=this._id;return arguments.length?this.each(("function"==typeof e?function(e,t){return function(){ut(this,e).delay=+t.apply(this,arguments)}}:function(e,t){return t=+t,function(){ut(this,e).delay=t}})(t,e)):ct(this.node(),t).delay},duration:function(e){var t=this._id;return arguments.length?this.each(("function"==typeof e?function(e,t){return function(){st(this,e).duration=+t.apply(this,arguments)}}:function(e,t){return t=+t,function(){st(this,e).duration=t}})(t,e)):ct(this.node(),t).duration},ease:function(e){var t=this._id;return arguments.length?this.each(function(e,t){if("function"!=typeof t)throw new Error;return function(){st(this,e).ease=t}}(t,e)):ct(this.node(),t).ease},easeVarying:function(e){if("function"!=typeof e)throw new Error;return this.each(function(e,t){return function(){var n=t.apply(this,arguments);if("function"!=typeof n)throw new Error;st(this,e).ease=n}}(this._id,e))},end:function(){var e,t,n=this,r=n._id,i=n.size();return new Promise((function(o,l){var a={value:l},u={value:function(){0==--i&&o()}};n.each((function(){var n=st(this,r),i=n.on;i!==e&&((t=(e=i).copy())._.cancel.push(a),t._.interrupt.push(a),t._.end.push(u)),n.on=t})),0===i&&o()}))},[Symbol.iterator]:Tt[Symbol.iterator]};var St={time:null,delay:0,duration:250,ease:function(e){return((e*=2)<=1?e*e*e:(e-=2)*e*e+2)/2}};function Ct(e,t){for(var n;!(n=e.__transition)||!(n=n[t]);)if(!(e=e.parentNode))throw new Error(`transition ${t} not found`);return n}Z.prototype.interrupt=function(e){return this.each((function(){!function(e,t){var n,r,i,o=e.__transition,l=!0;if(o){for(i in t=null==t?null:t+"",o)(n=o[i]).name===t?(r=n.state>2&&n.state<5,n.state=6,n.timer.stop(),n.on.call(r?"interrupt":"cancel",e,e.__data__,n.index,n.group),delete o[i]):l=!1;l&&delete e.__transition}}(this,e)}))},Z.prototype.transition=function(e){var t,n;e instanceof _t?(t=e._id,e=e._name):(t=Et(),(n=St).time=Ge(),e=null==e?null:e+"");for(var r=this._groups,i=r.length,o=0;o<i;++o)for(var l,a=r[o],u=a.length,s=0;s<u;++s)(l=a[s])&&at(l,e,t,s,a,n||Ct(l,t));return new _t(r,this._parents,e,t)};const{abs:Pt,max:Nt,min:Mt}=Math;function Ot(e){return{type:e}}["w","e"].map(Ot),["n","s"].map(Ot),["n","w","e","s","nw","ne","sw","se"].map(Ot);class zt extends Map{constructor(e,t=Rt){if(super(),Object.defineProperties(this,{_intern:{value:new Map},_key:{value:t}}),null!=e)for(const[t,n]of e)this.set(t,n)}get(e){return super.get(At(this,e))}has(e){return super.has(At(this,e))}set(e,t){return super.set(function({_intern:e,_key:t},n){const r=t(n);return e.has(r)?e.get(r):(e.set(r,n),n)}(this,e),t)}delete(e){return super.delete(function({_intern:e,_key:t},n){const r=t(n);return e.has(r)&&(n=e.get(r),e.delete(r)),n}(this,e))}}function At({_intern:e,_key:t},n){const r=t(n);return e.has(r)?e.get(r):n}function Rt(e){return null!==e&&"object"==typeof e?e.valueOf():e}const Lt=Symbol("implicit");function It(){var e=new zt,t=[],n=[],r=Lt;function i(i){let o=e.get(i);if(void 0===o){if(r!==Lt)return r;e.set(i,o=t.push(i)-1)}return n[o%n.length]}return i.domain=function(n){if(!arguments.length)return t.slice();t=[],e=new zt;for(const r of n)e.has(r)||e.set(r,t.push(r)-1);return i},i.range=function(e){return arguments.length?(n=Array.from(e),i):n.slice()},i.unknown=function(e){return arguments.length?(r=e,i):r},i.copy=function(){return It(t,n).unknown(r)},function(e,t){switch(arguments.length){case 0:break;case 1:this.range(e);break;default:this.range(t).domain(e)}return this}.apply(i,arguments),i}var Dt=function(e){return"string"==typeof e?new Y([document.querySelectorAll(e)],[document.documentElement]):new Y([f(e)],X)};function Ft(e){return((e=Math.exp(e))+1/e)/2}function $t(e,t,n){this.k=e,this.x=t,this.y=n}!function e(t,n,r){function i(e,i){var o,l,a=e[0],u=e[1],s=e[2],c=i[0],f=i[1],d=i[2],p=c-a,h=f-u,m=p*p+h*h;if(m<1e-12)l=Math.log(d/s)/t,o=function(e){return[a+e*p,u+e*h,s*Math.exp(t*e*l)]};else{var y=Math.sqrt(m),g=(d*d-s*s+r*m)/(2*s*n*y),v=(d*d-s*s-r*m)/(2*d*n*y),b=Math.log(Math.sqrt(g*g+1)-g),w=Math.log(Math.sqrt(v*v+1)-v);l=(w-b)/t,o=function(e){var r=e*l,i=Ft(b),o=s/(n*y)*(i*function(e){return((e=Math.exp(2*e))-1)/(e+1)}(t*r+b)-function(e){return((e=Math.exp(e))-1/e)/2}(b));return[a+o*p,u+o*h,s*i/Ft(t*r+b)]}}return o.duration=1e3*l*t/Math.SQRT2,o}return i.rho=function(t){var n=Math.max(.001,+t),r=n*n;return e(n,r,r*r)},i}(Math.SQRT2,2,4),$t.prototype={constructor:$t,scale:function(e){return 1===e?this:new $t(this.k*e,this.x,this.y)},translate:function(e,t){return 0===e&0===t?this:new $t(this.k,this.x+this.k*e,this.y+this.k*t)},apply:function(e){return[e[0]*this.k+this.x,e[1]*this.k+this.y]},applyX:function(e){return e*this.k+this.x},applyY:function(e){return e*this.k+this.y},invert:function(e){return[(e[0]-this.x)/this.k,(e[1]-this.y)/this.k]},invertX:function(e){return(e-this.x)/this.k},invertY:function(e){return(e-this.y)/this.k},rescaleX:function(e){return e.copy().domain(e.range().map(this.invertX,this).map(e.invert,e))},rescaleY:function(e){return e.copy().domain(e.range().map(this.invertY,this).map(e.invert,e))},toString:function(){return"translate("+this.x+","+this.y+") scale("+this.k+")"}},new $t(1,0,0),$t.prototype,n.d(t,"a",(function(){return It})),n.d(t,"b",(function(){return J})),n.d(t,"c",(function(){return Dt}))},13:function(e,t,n){"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var r=Object.getOwnPropertySymbols,i=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable;e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,l,a=function(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}(e),u=1;u<arguments.length;u++){for(var s in n=Object(arguments[u]))i.call(n,s)&&(a[s]=n[s]);if(r){l=r(n);for(var c=0;c<l.length;c++)o.call(n,l[c])&&(a[l[c]]=n[l[c]])}}return a}},14:function(e,t,n){"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(51)},15:function(e,t){e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n=function(e,t){var n=e[1]||"",r=e[3];if(!r)return n;if(t&&"function"==typeof btoa){var i=function(e){return"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(e))))+" */"}(r),o=r.sources.map((function(e){return"/*# sourceURL="+r.sourceRoot+e+" */"}));return[n].concat(o).concat([i]).join("\n")}return[n].join("\n")}(t,e);return t[2]?"@media "+t[2]+"{"+n+"}":n})).join("")},t.i=function(e,n){"string"==typeof e&&(e=[[null,e,""]]);for(var r={},i=0;i<this.length;i++){var o=this[i][0];"number"==typeof o&&(r[o]=!0)}for(i=0;i<e.length;i++){var l=e[i];"number"==typeof l[0]&&r[l[0]]||(n&&!l[2]?l[2]=n:n&&(l[2]="("+l[2]+") and ("+n+")"),t.push(l))}},t}},50:function(e,t,n){"use strict";
/** @license React v16.14.0
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(13),i="function"==typeof Symbol&&Symbol.for,o=i?Symbol.for("react.element"):60103,l=i?Symbol.for("react.portal"):60106,a=i?Symbol.for("react.fragment"):60107,u=i?Symbol.for("react.strict_mode"):60108,s=i?Symbol.for("react.profiler"):60114,c=i?Symbol.for("react.provider"):60109,f=i?Symbol.for("react.context"):60110,d=i?Symbol.for("react.forward_ref"):60112,p=i?Symbol.for("react.suspense"):60113,h=i?Symbol.for("react.memo"):60115,m=i?Symbol.for("react.lazy"):60116,y="function"==typeof Symbol&&Symbol.iterator;function g(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var v={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},b={};function w(e,t,n){this.props=e,this.context=t,this.refs=b,this.updater=n||v}function k(){}function x(e,t,n){this.props=e,this.context=t,this.refs=b,this.updater=n||v}w.prototype.isReactComponent={},w.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(g(85));this.updater.enqueueSetState(this,e,t,"setState")},w.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},k.prototype=w.prototype;var _=x.prototype=new k;_.constructor=x,r(_,w.prototype),_.isPureReactComponent=!0;var E={current:null},T=Object.prototype.hasOwnProperty,S={key:!0,ref:!0,__self:!0,__source:!0};function C(e,t,n){var r,i={},l=null,a=null;if(null!=t)for(r in void 0!==t.ref&&(a=t.ref),void 0!==t.key&&(l=""+t.key),t)T.call(t,r)&&!S.hasOwnProperty(r)&&(i[r]=t[r]);var u=arguments.length-2;if(1===u)i.children=n;else if(1<u){for(var s=Array(u),c=0;c<u;c++)s[c]=arguments[c+2];i.children=s}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===i[r]&&(i[r]=u[r]);return{$$typeof:o,type:e,key:l,ref:a,props:i,_owner:E.current}}function P(e){return"object"==typeof e&&null!==e&&e.$$typeof===o}var N=/\/+/g,M=[];function O(e,t,n,r){if(M.length){var i=M.pop();return i.result=e,i.keyPrefix=t,i.func=n,i.context=r,i.count=0,i}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function z(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>M.length&&M.push(e)}function A(e,t,n){return null==e?0:function e(t,n,r,i){var a=typeof t;"undefined"!==a&&"boolean"!==a||(t=null);var u=!1;if(null===t)u=!0;else switch(a){case"string":case"number":u=!0;break;case"object":switch(t.$$typeof){case o:case l:u=!0}}if(u)return r(i,t,""===n?"."+R(t,0):n),1;if(u=0,n=""===n?".":n+":",Array.isArray(t))for(var s=0;s<t.length;s++){var c=n+R(a=t[s],s);u+=e(a,c,r,i)}else if("function"==typeof(c=null===t||"object"!=typeof t?null:"function"==typeof(c=y&&t[y]||t["@@iterator"])?c:null))for(t=c.call(t),s=0;!(a=t.next()).done;)u+=e(a=a.value,c=n+R(a,s++),r,i);else if("object"===a)throw r=""+t,Error(g(31,"[object Object]"===r?"object with keys {"+Object.keys(t).join(", ")+"}":r,""));return u}(e,"",t,n)}function R(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,(function(e){return t[e]}))}(e.key):t.toString(36)}function L(e,t){e.func.call(e.context,t,e.count++)}function I(e,t,n){var r=e.result,i=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?D(e,r,n,(function(e){return e})):null!=e&&(P(e)&&(e=function(e,t){return{$$typeof:o,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,i+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(N,"$&/")+"/")+n)),r.push(e))}function D(e,t,n,r,i){var o="";null!=n&&(o=(""+n).replace(N,"$&/")+"/"),A(e,I,t=O(t,o,r,i)),z(t)}var F={current:null};function $(){var e=F.current;if(null===e)throw Error(g(321));return e}var j={ReactCurrentDispatcher:F,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:E,IsSomeRendererActing:{current:!1},assign:r};t.Children={map:function(e,t,n){if(null==e)return e;var r=[];return D(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;A(e,L,t=O(null,null,t,n)),z(t)},count:function(e){return A(e,(function(){return null}),null)},toArray:function(e){var t=[];return D(e,t,null,(function(e){return e})),t},only:function(e){if(!P(e))throw Error(g(143));return e}},t.Component=w,t.Fragment=a,t.Profiler=s,t.PureComponent=x,t.StrictMode=u,t.Suspense=p,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=j,t.cloneElement=function(e,t,n){if(null==e)throw Error(g(267,e));var i=r({},e.props),l=e.key,a=e.ref,u=e._owner;if(null!=t){if(void 0!==t.ref&&(a=t.ref,u=E.current),void 0!==t.key&&(l=""+t.key),e.type&&e.type.defaultProps)var s=e.type.defaultProps;for(c in t)T.call(t,c)&&!S.hasOwnProperty(c)&&(i[c]=void 0===t[c]&&void 0!==s?s[c]:t[c])}var c=arguments.length-2;if(1===c)i.children=n;else if(1<c){s=Array(c);for(var f=0;f<c;f++)s[f]=arguments[f+2];i.children=s}return{$$typeof:o,type:e.type,key:l,ref:a,props:i,_owner:u}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:f,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:c,_context:e},e.Consumer=e},t.createElement=C,t.createFactory=function(e){var t=C.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:d,render:e}},t.isValidElement=P,t.lazy=function(e){return{$$typeof:m,_ctor:e,_status:-1,_result:null}},t.memo=function(e,t){return{$$typeof:h,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return $().useCallback(e,t)},t.useContext=function(e,t){return $().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return $().useEffect(e,t)},t.useImperativeHandle=function(e,t,n){return $().useImperativeHandle(e,t,n)},t.useLayoutEffect=function(e,t){return $().useLayoutEffect(e,t)},t.useMemo=function(e,t){return $().useMemo(e,t)},t.useReducer=function(e,t,n){return $().useReducer(e,t,n)},t.useRef=function(e){return $().useRef(e)},t.useState=function(e){return $().useState(e)},t.version="16.14.0"},51:function(e,t,n){"use strict";
/** @license React v16.14.0
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(0),i=n(13),o=n(52);function l(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(l(227));var a=!1,u=null,s=!1,c=null,f={onError:function(e){a=!0,u=e}};function d(e,t,n,r,i,o,l,s,c){a=!1,u=null,function(e,t,n,r,i,o,l,a,u){var s=Array.prototype.slice.call(arguments,3);try{t.apply(n,s)}catch(e){this.onError(e)}}.apply(f,arguments)}var p=null,h=null,m=null;function y(e,t,n){var r=e.type||"unknown-event";e.currentTarget=m(n),function(e,t,n,r,i,o,f,p,h){if(d.apply(this,arguments),a){if(!a)throw Error(l(198));var m=u;a=!1,u=null,s||(s=!0,c=m)}}(r,t,void 0,e),e.currentTarget=null}var g=null,v={};function b(){if(g)for(var e in v){var t=v[e],n=g.indexOf(e);if(!(-1<n))throw Error(l(96,e));if(!k[n]){if(!t.extractEvents)throw Error(l(97,e));for(var r in k[n]=t,n=t.eventTypes){var i=void 0,o=n[r],a=t,u=r;if(x.hasOwnProperty(u))throw Error(l(99,u));x[u]=o;var s=o.phasedRegistrationNames;if(s){for(i in s)s.hasOwnProperty(i)&&w(s[i],a,u);i=!0}else o.registrationName?(w(o.registrationName,a,u),i=!0):i=!1;if(!i)throw Error(l(98,r,e))}}}}function w(e,t,n){if(_[e])throw Error(l(100,e));_[e]=t,E[e]=t.eventTypes[n].dependencies}var k=[],x={},_={},E={};function T(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];if(!v.hasOwnProperty(t)||v[t]!==r){if(v[t])throw Error(l(102,t));v[t]=r,n=!0}}n&&b()}var S=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),C=null,P=null,N=null;function M(e){if(e=h(e)){if("function"!=typeof C)throw Error(l(280));var t=e.stateNode;t&&(t=p(t),C(e.stateNode,e.type,t))}}function O(e){P?N?N.push(e):N=[e]:P=e}function z(){if(P){var e=P,t=N;if(N=P=null,M(e),t)for(e=0;e<t.length;e++)M(t[e])}}function A(e,t){return e(t)}function R(e,t,n,r,i){return e(t,n,r,i)}function L(){}var I=A,D=!1,F=!1;function $(){null===P&&null===N||(L(),z())}function j(e,t,n){if(F)return e(t,n);F=!0;try{return I(e,t,n)}finally{F=!1,$()}}var U=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,V=Object.prototype.hasOwnProperty,W={},H={};function q(e,t,n,r,i,o){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=i,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=o}var Q={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){Q[e]=new q(e,0,!1,e,null,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];Q[t]=new q(t,1,!1,e[1],null,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){Q[e]=new q(e,2,!1,e.toLowerCase(),null,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){Q[e]=new q(e,2,!1,e,null,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){Q[e]=new q(e,3,!1,e.toLowerCase(),null,!1)})),["checked","multiple","muted","selected"].forEach((function(e){Q[e]=new q(e,3,!0,e,null,!1)})),["capture","download"].forEach((function(e){Q[e]=new q(e,4,!1,e,null,!1)})),["cols","rows","size","span"].forEach((function(e){Q[e]=new q(e,6,!1,e,null,!1)})),["rowSpan","start"].forEach((function(e){Q[e]=new q(e,5,!1,e.toLowerCase(),null,!1)}));var B=/[\-:]([a-z])/g;function K(e){return e[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(B,K);Q[t]=new q(t,1,!1,e,null,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(B,K);Q[t]=new q(t,1,!1,e,"http://www.w3.org/1999/xlink",!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(B,K);Q[t]=new q(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1)})),["tabIndex","crossOrigin"].forEach((function(e){Q[e]=new q(e,1,!1,e.toLowerCase(),null,!1)})),Q.xlinkHref=new q("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0),["src","href","action","formAction"].forEach((function(e){Q[e]=new q(e,1,!1,e.toLowerCase(),null,!0)}));var X=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;function Y(e,t,n,r){var i=Q.hasOwnProperty(t)?Q[t]:null;(null!==i?0===i.type:!r&&2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1]))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,i,r)&&(n=null),r||null===i?function(e){return!!V.call(H,e)||!V.call(W,e)&&(U.test(e)?H[e]=!0:(W[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):i.mustUseProperty?e[i.propertyName]=null===n?3!==i.type&&"":n:(t=i.attributeName,r=i.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(i=i.type)||4===i&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}X.hasOwnProperty("ReactCurrentDispatcher")||(X.ReactCurrentDispatcher={current:null}),X.hasOwnProperty("ReactCurrentBatchConfig")||(X.ReactCurrentBatchConfig={suspense:null});var G=/^(.*)[\\\/]/,Z="function"==typeof Symbol&&Symbol.for,J=Z?Symbol.for("react.element"):60103,ee=Z?Symbol.for("react.portal"):60106,te=Z?Symbol.for("react.fragment"):60107,ne=Z?Symbol.for("react.strict_mode"):60108,re=Z?Symbol.for("react.profiler"):60114,ie=Z?Symbol.for("react.provider"):60109,oe=Z?Symbol.for("react.context"):60110,le=Z?Symbol.for("react.concurrent_mode"):60111,ae=Z?Symbol.for("react.forward_ref"):60112,ue=Z?Symbol.for("react.suspense"):60113,se=Z?Symbol.for("react.suspense_list"):60120,ce=Z?Symbol.for("react.memo"):60115,fe=Z?Symbol.for("react.lazy"):60116,de=Z?Symbol.for("react.block"):60121,pe="function"==typeof Symbol&&Symbol.iterator;function he(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=pe&&e[pe]||e["@@iterator"])?e:null}function me(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case te:return"Fragment";case ee:return"Portal";case re:return"Profiler";case ne:return"StrictMode";case ue:return"Suspense";case se:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case oe:return"Context.Consumer";case ie:return"Context.Provider";case ae:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case ce:return me(e.type);case de:return me(e.render);case fe:if(e=1===e._status?e._result:null)return me(e)}return null}function ye(e){var t="";do{e:switch(e.tag){case 3:case 4:case 6:case 7:case 10:case 9:var n="";break e;default:var r=e._debugOwner,i=e._debugSource,o=me(e.type);n=null,r&&(n=me(r.type)),r=o,o="",i?o=" (at "+i.fileName.replace(G,"")+":"+i.lineNumber+")":n&&(o=" (created by "+n+")"),n="\n    in "+(r||"Unknown")+o}t+=n,e=e.return}while(e);return t}function ge(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function ve(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function be(e){e._valueTracker||(e._valueTracker=function(e){var t=ve(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var i=n.get,o=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return i.call(this)},set:function(e){r=""+e,o.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function we(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=ve(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function ke(e,t){var n=t.checked;return i({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function xe(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=ge(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function _e(e,t){null!=(t=t.checked)&&Y(e,"checked",t,!1)}function Ee(e,t){_e(e,t);var n=ge(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?Se(e,t.type,n):t.hasOwnProperty("defaultValue")&&Se(e,t.type,ge(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function Te(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function Se(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function Ce(e,t){return e=i({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function Pe(e,t,n,r){if(e=e.options,t){t={};for(var i=0;i<n.length;i++)t["$"+n[i]]=!0;for(n=0;n<e.length;n++)i=t.hasOwnProperty("$"+e[n].value),e[n].selected!==i&&(e[n].selected=i),i&&r&&(e[n].defaultSelected=!0)}else{for(n=""+ge(n),t=null,i=0;i<e.length;i++){if(e[i].value===n)return e[i].selected=!0,void(r&&(e[i].defaultSelected=!0));null!==t||e[i].disabled||(t=e[i])}null!==t&&(t.selected=!0)}}function Ne(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(l(91));return i({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function Me(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(l(92));if(Array.isArray(n)){if(!(1>=n.length))throw Error(l(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:ge(n)}}function Oe(e,t){var n=ge(t.value),r=ge(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function ze(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}function Ae(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Re(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?Ae(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var Le,Ie=function(e){return"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(t,n,r,i){MSApp.execUnsafeLocalFunction((function(){return e(t,n)}))}:e}((function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((Le=Le||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=Le.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}}));function De(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}function Fe(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var $e={animationend:Fe("Animation","AnimationEnd"),animationiteration:Fe("Animation","AnimationIteration"),animationstart:Fe("Animation","AnimationStart"),transitionend:Fe("Transition","TransitionEnd")},je={},Ue={};function Ve(e){if(je[e])return je[e];if(!$e[e])return e;var t,n=$e[e];for(t in n)if(n.hasOwnProperty(t)&&t in Ue)return je[e]=n[t];return e}S&&(Ue=document.createElement("div").style,"AnimationEvent"in window||(delete $e.animationend.animation,delete $e.animationiteration.animation,delete $e.animationstart.animation),"TransitionEvent"in window||delete $e.transitionend.transition);var We=Ve("animationend"),He=Ve("animationiteration"),qe=Ve("animationstart"),Qe=Ve("transitionend"),Be="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Ke=new("function"==typeof WeakMap?WeakMap:Map);function Xe(e){var t=Ke.get(e);return void 0===t&&(t=new Map,Ke.set(e,t)),t}function Ye(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(1026&(t=e).effectTag)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Ge(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&null!==(e=e.alternate)&&(t=e.memoizedState),null!==t)return t.dehydrated}return null}function Ze(e){if(Ye(e)!==e)throw Error(l(188))}function Je(e){if(!(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ye(e)))throw Error(l(188));return t!==e?null:e}for(var n=e,r=t;;){var i=n.return;if(null===i)break;var o=i.alternate;if(null===o){if(null!==(r=i.return)){n=r;continue}break}if(i.child===o.child){for(o=i.child;o;){if(o===n)return Ze(i),e;if(o===r)return Ze(i),t;o=o.sibling}throw Error(l(188))}if(n.return!==r.return)n=i,r=o;else{for(var a=!1,u=i.child;u;){if(u===n){a=!0,n=i,r=o;break}if(u===r){a=!0,r=i,n=o;break}u=u.sibling}if(!a){for(u=o.child;u;){if(u===n){a=!0,n=o,r=i;break}if(u===r){a=!0,r=o,n=i;break}u=u.sibling}if(!a)throw Error(l(189))}}if(n.alternate!==r)throw Error(l(190))}if(3!==n.tag)throw Error(l(188));return n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}function et(e,t){if(null==t)throw Error(l(30));return null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function tt(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var nt=null;function rt(e){if(e){var t=e._dispatchListeners,n=e._dispatchInstances;if(Array.isArray(t))for(var r=0;r<t.length&&!e.isPropagationStopped();r++)y(e,t[r],n[r]);else t&&y(e,t,n);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}function it(e){if(null!==e&&(nt=et(nt,e)),e=nt,nt=null,e){if(tt(e,rt),nt)throw Error(l(95));if(s)throw e=c,s=!1,c=null,e}}function ot(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function lt(e){if(!S)return!1;var t=(e="on"+e)in document;return t||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"==typeof t[e]),t}var at=[];function ut(e){e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>at.length&&at.push(e)}function st(e,t,n,r){if(at.length){var i=at.pop();return i.topLevelType=e,i.eventSystemFlags=r,i.nativeEvent=t,i.targetInst=n,i}return{topLevelType:e,eventSystemFlags:r,nativeEvent:t,targetInst:n,ancestors:[]}}function ct(e){var t=e.targetInst,n=t;do{if(!n){e.ancestors.push(n);break}var r=n;if(3===r.tag)r=r.stateNode.containerInfo;else{for(;r.return;)r=r.return;r=3!==r.tag?null:r.stateNode.containerInfo}if(!r)break;5!==(t=n.tag)&&6!==t||e.ancestors.push(n),n=xn(r)}while(n);for(n=0;n<e.ancestors.length;n++){t=e.ancestors[n];var i=ot(e.nativeEvent);r=e.topLevelType;var o=e.nativeEvent,l=e.eventSystemFlags;0===n&&(l|=64);for(var a=null,u=0;u<k.length;u++){var s=k[u];s&&(s=s.extractEvents(r,t,o,i,l))&&(a=et(a,s))}it(a)}}function ft(e,t,n){if(!n.has(e)){switch(e){case"scroll":qt(t,"scroll",!0);break;case"focus":case"blur":qt(t,"focus",!0),qt(t,"blur",!0),n.set("blur",null),n.set("focus",null);break;case"cancel":case"close":lt(e)&&qt(t,e,!0);break;case"invalid":case"submit":case"reset":break;default:-1===Be.indexOf(e)&&Ht(e,t)}n.set(e,null)}}var dt,pt,ht,mt=!1,yt=[],gt=null,vt=null,bt=null,wt=new Map,kt=new Map,xt=[],_t="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit".split(" "),Et="focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture".split(" ");function Tt(e,t,n,r,i){return{blockedOn:e,topLevelType:t,eventSystemFlags:32|n,nativeEvent:i,container:r}}function St(e,t){switch(e){case"focus":case"blur":gt=null;break;case"dragenter":case"dragleave":vt=null;break;case"mouseover":case"mouseout":bt=null;break;case"pointerover":case"pointerout":wt.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":kt.delete(t.pointerId)}}function Ct(e,t,n,r,i,o){return null===e||e.nativeEvent!==o?(e=Tt(t,n,r,i,o),null!==t&&null!==(t=_n(t))&&pt(t),e):(e.eventSystemFlags|=r,e)}function Pt(e){var t=xn(e.target);if(null!==t){var n=Ye(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Ge(n)))return e.blockedOn=t,void o.unstable_runWithPriority(e.priority,(function(){ht(n)}))}else if(3===t&&n.stateNode.hydrate)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function Nt(e){if(null!==e.blockedOn)return!1;var t=Bt(e.topLevelType,e.eventSystemFlags,e.container,e.nativeEvent);if(null!==t){var n=_n(t);return null!==n&&pt(n),e.blockedOn=t,!1}return!0}function Mt(e,t,n){Nt(e)&&n.delete(t)}function Ot(){for(mt=!1;0<yt.length;){var e=yt[0];if(null!==e.blockedOn){null!==(e=_n(e.blockedOn))&&dt(e);break}var t=Bt(e.topLevelType,e.eventSystemFlags,e.container,e.nativeEvent);null!==t?e.blockedOn=t:yt.shift()}null!==gt&&Nt(gt)&&(gt=null),null!==vt&&Nt(vt)&&(vt=null),null!==bt&&Nt(bt)&&(bt=null),wt.forEach(Mt),kt.forEach(Mt)}function zt(e,t){e.blockedOn===t&&(e.blockedOn=null,mt||(mt=!0,o.unstable_scheduleCallback(o.unstable_NormalPriority,Ot)))}function At(e){function t(t){return zt(t,e)}if(0<yt.length){zt(yt[0],e);for(var n=1;n<yt.length;n++){var r=yt[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==gt&&zt(gt,e),null!==vt&&zt(vt,e),null!==bt&&zt(bt,e),wt.forEach(t),kt.forEach(t),n=0;n<xt.length;n++)(r=xt[n]).blockedOn===e&&(r.blockedOn=null);for(;0<xt.length&&null===(n=xt[0]).blockedOn;)Pt(n),null===n.blockedOn&&xt.shift()}var Rt={},Lt=new Map,It=new Map,Dt=["abort","abort",We,"animationEnd",He,"animationIteration",qe,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Qe,"transitionEnd","waiting","waiting"];function Ft(e,t){for(var n=0;n<e.length;n+=2){var r=e[n],i=e[n+1],o="on"+(i[0].toUpperCase()+i.slice(1));o={phasedRegistrationNames:{bubbled:o,captured:o+"Capture"},dependencies:[r],eventPriority:t},It.set(r,t),Lt.set(r,o),Rt[i]=o}}Ft("blur blur cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focus focus input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),Ft("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),Ft(Dt,2);for(var $t="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),jt=0;jt<$t.length;jt++)It.set($t[jt],0);var Ut=o.unstable_UserBlockingPriority,Vt=o.unstable_runWithPriority,Wt=!0;function Ht(e,t){qt(t,e,!1)}function qt(e,t,n){var r=It.get(t);switch(void 0===r?2:r){case 0:r=function(e,t,n,r){D||L();var i=Qt,o=D;D=!0;try{R(i,e,t,n,r)}finally{(D=o)||$()}}.bind(null,t,1,e);break;case 1:r=function(e,t,n,r){Vt(Ut,Qt.bind(null,e,t,n,r))}.bind(null,t,1,e);break;default:r=Qt.bind(null,t,1,e)}n?e.addEventListener(t,r,!0):e.addEventListener(t,r,!1)}function Qt(e,t,n,r){if(Wt)if(0<yt.length&&-1<_t.indexOf(e))e=Tt(null,e,t,n,r),yt.push(e);else{var i=Bt(e,t,n,r);if(null===i)St(e,r);else if(-1<_t.indexOf(e))e=Tt(i,e,t,n,r),yt.push(e);else if(!function(e,t,n,r,i){switch(t){case"focus":return gt=Ct(gt,e,t,n,r,i),!0;case"dragenter":return vt=Ct(vt,e,t,n,r,i),!0;case"mouseover":return bt=Ct(bt,e,t,n,r,i),!0;case"pointerover":var o=i.pointerId;return wt.set(o,Ct(wt.get(o)||null,e,t,n,r,i)),!0;case"gotpointercapture":return o=i.pointerId,kt.set(o,Ct(kt.get(o)||null,e,t,n,r,i)),!0}return!1}(i,e,t,n,r)){St(e,r),e=st(e,r,null,t);try{j(ct,e)}finally{ut(e)}}}}function Bt(e,t,n,r){if(null!==(n=xn(n=ot(r)))){var i=Ye(n);if(null===i)n=null;else{var o=i.tag;if(13===o){if(null!==(n=Ge(i)))return n;n=null}else if(3===o){if(i.stateNode.hydrate)return 3===i.tag?i.stateNode.containerInfo:null;n=null}else i!==n&&(n=null)}}e=st(e,r,n,t);try{j(ct,e)}finally{ut(e)}return null}var Kt={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},Xt=["Webkit","ms","Moz","O"];function Yt(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||Kt.hasOwnProperty(e)&&Kt[e]?(""+t).trim():t+"px"}function Gt(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),i=Yt(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,i):e[n]=i}}Object.keys(Kt).forEach((function(e){Xt.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),Kt[t]=Kt[e]}))}));var Zt=i({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function Jt(e,t){if(t){if(Zt[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(l(137,e,""));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(l(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(l(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(l(62,""))}}function en(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var tn="http://www.w3.org/1999/xhtml";function nn(e,t){var n=Xe(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=E[t];for(var r=0;r<t.length;r++)ft(t[r],e,n)}function rn(){}function on(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function ln(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function an(e,t){var n,r=ln(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=ln(r)}}function un(){for(var e=window,t=on();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=on((e=t.contentWindow).document)}return t}function sn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var cn=null,fn=null;function dn(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function pn(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var hn="function"==typeof setTimeout?setTimeout:void 0,mn="function"==typeof clearTimeout?clearTimeout:void 0;function yn(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function gn(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var vn=Math.random().toString(36).slice(2),bn="__reactInternalInstance$"+vn,wn="__reactEventHandlers$"+vn,kn="__reactContainere$"+vn;function xn(e){var t=e[bn];if(t)return t;for(var n=e.parentNode;n;){if(t=n[kn]||n[bn]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=gn(e);null!==e;){if(n=e[bn])return n;e=gn(e)}return t}n=(e=n).parentNode}return null}function _n(e){return!(e=e[bn]||e[kn])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function En(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(l(33))}function Tn(e){return e[wn]||null}function Sn(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function Cn(e,t){var n=e.stateNode;if(!n)return null;var r=p(n);if(!r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(l(231,t,typeof n));return n}function Pn(e,t,n){(t=Cn(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=et(n._dispatchListeners,t),n._dispatchInstances=et(n._dispatchInstances,e))}function Nn(e){if(e&&e.dispatchConfig.phasedRegistrationNames){for(var t=e._targetInst,n=[];t;)n.push(t),t=Sn(t);for(t=n.length;0<t--;)Pn(n[t],"captured",e);for(t=0;t<n.length;t++)Pn(n[t],"bubbled",e)}}function Mn(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=Cn(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=et(n._dispatchListeners,t),n._dispatchInstances=et(n._dispatchInstances,e))}function On(e){e&&e.dispatchConfig.registrationName&&Mn(e._targetInst,null,e)}function zn(e){tt(e,Nn)}var An=null,Rn=null,Ln=null;function In(){if(Ln)return Ln;var e,t,n=Rn,r=n.length,i="value"in An?An.value:An.textContent,o=i.length;for(e=0;e<r&&n[e]===i[e];e++);var l=r-e;for(t=1;t<=l&&n[r-t]===i[o-t];t++);return Ln=i.slice(e,1<t?1-t:void 0)}function Dn(){return!0}function Fn(){return!1}function $n(e,t,n,r){for(var i in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(i)&&((t=e[i])?this[i]=t(n):"target"===i?this.target=r:this[i]=n[i]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?Dn:Fn,this.isPropagationStopped=Fn,this}function jn(e,t,n,r){if(this.eventPool.length){var i=this.eventPool.pop();return this.call(i,e,t,n,r),i}return new this(e,t,n,r)}function Un(e){if(!(e instanceof this))throw Error(l(279));e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function Vn(e){e.eventPool=[],e.getPooled=jn,e.release=Un}i($n.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=Dn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=Dn)},persist:function(){this.isPersistent=Dn},isPersistent:Fn,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=Fn,this._dispatchInstances=this._dispatchListeners=null}}),$n.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},$n.extend=function(e){function t(){}function n(){return r.apply(this,arguments)}var r=this;t.prototype=r.prototype;var o=new t;return i(o,n.prototype),n.prototype=o,n.prototype.constructor=n,n.Interface=i({},r.Interface,e),n.extend=r.extend,Vn(n),n},Vn($n);var Wn=$n.extend({data:null}),Hn=$n.extend({data:null}),qn=[9,13,27,32],Qn=S&&"CompositionEvent"in window,Bn=null;S&&"documentMode"in document&&(Bn=document.documentMode);var Kn=S&&"TextEvent"in window&&!Bn,Xn=S&&(!Qn||Bn&&8<Bn&&11>=Bn),Yn=String.fromCharCode(32),Gn={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},Zn=!1;function Jn(e,t){switch(e){case"keyup":return-1!==qn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function er(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var tr=!1,nr={eventTypes:Gn,extractEvents:function(e,t,n,r){var i;if(Qn)e:{switch(e){case"compositionstart":var o=Gn.compositionStart;break e;case"compositionend":o=Gn.compositionEnd;break e;case"compositionupdate":o=Gn.compositionUpdate;break e}o=void 0}else tr?Jn(e,n)&&(o=Gn.compositionEnd):"keydown"===e&&229===n.keyCode&&(o=Gn.compositionStart);return o?(Xn&&"ko"!==n.locale&&(tr||o!==Gn.compositionStart?o===Gn.compositionEnd&&tr&&(i=In()):(Rn="value"in(An=r)?An.value:An.textContent,tr=!0)),o=Wn.getPooled(o,t,n,r),(i||null!==(i=er(n)))&&(o.data=i),zn(o),i=o):i=null,(e=Kn?function(e,t){switch(e){case"compositionend":return er(t);case"keypress":return 32!==t.which?null:(Zn=!0,Yn);case"textInput":return(e=t.data)===Yn&&Zn?null:e;default:return null}}(e,n):function(e,t){if(tr)return"compositionend"===e||!Qn&&Jn(e,t)?(e=In(),Ln=Rn=An=null,tr=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Xn&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))?((t=Hn.getPooled(Gn.beforeInput,t,n,r)).data=e,zn(t)):t=null,null===i?t:null===t?i:[i,t]}},rr={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function ir(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!rr[e.type]:"textarea"===t}var or={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function lr(e,t,n){return(e=$n.getPooled(or.change,e,t,n)).type="change",O(n),zn(e),e}var ar=null,ur=null;function sr(e){it(e)}function cr(e){if(we(En(e)))return e}function fr(e,t){if("change"===e)return t}var dr=!1;function pr(){ar&&(ar.detachEvent("onpropertychange",hr),ur=ar=null)}function hr(e){if("value"===e.propertyName&&cr(ur))if(e=lr(ur,e,ot(e)),D)it(e);else{D=!0;try{A(sr,e)}finally{D=!1,$()}}}function mr(e,t,n){"focus"===e?(pr(),ur=n,(ar=t).attachEvent("onpropertychange",hr)):"blur"===e&&pr()}function yr(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return cr(ur)}function gr(e,t){if("click"===e)return cr(t)}function vr(e,t){if("input"===e||"change"===e)return cr(t)}S&&(dr=lt("input")&&(!document.documentMode||9<document.documentMode));var br={eventTypes:or,_isInputEventSupported:dr,extractEvents:function(e,t,n,r){var i=t?En(t):window,o=i.nodeName&&i.nodeName.toLowerCase();if("select"===o||"input"===o&&"file"===i.type)var l=fr;else if(ir(i))if(dr)l=vr;else{l=yr;var a=mr}else(o=i.nodeName)&&"input"===o.toLowerCase()&&("checkbox"===i.type||"radio"===i.type)&&(l=gr);if(l&&(l=l(e,t)))return lr(l,n,r);a&&a(e,i,t),"blur"===e&&(e=i._wrapperState)&&e.controlled&&"number"===i.type&&Se(i,"number",i.value)}},wr=$n.extend({view:null,detail:null}),kr={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function xr(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=kr[e])&&!!t[e]}function _r(){return xr}var Er=0,Tr=0,Sr=!1,Cr=!1,Pr=wr.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:_r,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},movementX:function(e){if("movementX"in e)return e.movementX;var t=Er;return Er=e.screenX,Sr?"mousemove"===e.type?e.screenX-t:0:(Sr=!0,0)},movementY:function(e){if("movementY"in e)return e.movementY;var t=Tr;return Tr=e.screenY,Cr?"mousemove"===e.type?e.screenY-t:0:(Cr=!0,0)}}),Nr=Pr.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Mr={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},Or={eventTypes:Mr,extractEvents:function(e,t,n,r,i){var o="mouseover"===e||"pointerover"===e,l="mouseout"===e||"pointerout"===e;if(o&&0==(32&i)&&(n.relatedTarget||n.fromElement)||!l&&!o)return null;if(o=r.window===r?r:(o=r.ownerDocument)?o.defaultView||o.parentWindow:window,l?(l=t,null!==(t=(t=n.relatedTarget||n.toElement)?xn(t):null)&&(t!==Ye(t)||5!==t.tag&&6!==t.tag)&&(t=null)):l=null,l===t)return null;if("mouseout"===e||"mouseover"===e)var a=Pr,u=Mr.mouseLeave,s=Mr.mouseEnter,c="mouse";else"pointerout"!==e&&"pointerover"!==e||(a=Nr,u=Mr.pointerLeave,s=Mr.pointerEnter,c="pointer");if(e=null==l?o:En(l),o=null==t?o:En(t),(u=a.getPooled(u,l,n,r)).type=c+"leave",u.target=e,u.relatedTarget=o,(n=a.getPooled(s,t,n,r)).type=c+"enter",n.target=o,n.relatedTarget=e,c=t,(r=l)&&c)e:{for(s=c,l=0,e=a=r;e;e=Sn(e))l++;for(e=0,t=s;t;t=Sn(t))e++;for(;0<l-e;)a=Sn(a),l--;for(;0<e-l;)s=Sn(s),e--;for(;l--;){if(a===s||a===s.alternate)break e;a=Sn(a),s=Sn(s)}a=null}else a=null;for(s=a,a=[];r&&r!==s&&(null===(l=r.alternate)||l!==s);)a.push(r),r=Sn(r);for(r=[];c&&c!==s&&(null===(l=c.alternate)||l!==s);)r.push(c),c=Sn(c);for(c=0;c<a.length;c++)Mn(a[c],"bubbled",u);for(c=r.length;0<c--;)Mn(r[c],"captured",n);return 0==(64&i)?[u]:[u,n]}},zr="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},Ar=Object.prototype.hasOwnProperty;function Rr(e,t){if(zr(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!Ar.call(t,n[r])||!zr(e[n[r]],t[n[r]]))return!1;return!0}var Lr=S&&"documentMode"in document&&11>=document.documentMode,Ir={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},Dr=null,Fr=null,$r=null,jr=!1;function Ur(e,t){var n=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;return jr||null==Dr||Dr!==on(n)?null:(n="selectionStart"in(n=Dr)&&sn(n)?{start:n.selectionStart,end:n.selectionEnd}:{anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},$r&&Rr($r,n)?null:($r=n,(e=$n.getPooled(Ir.select,Fr,e,t)).type="select",e.target=Dr,zn(e),e))}var Vr={eventTypes:Ir,extractEvents:function(e,t,n,r,i,o){if(!(o=!(i=o||(r.window===r?r.document:9===r.nodeType?r:r.ownerDocument)))){e:{i=Xe(i),o=E.onSelect;for(var l=0;l<o.length;l++)if(!i.has(o[l])){i=!1;break e}i=!0}o=!i}if(o)return null;switch(i=t?En(t):window,e){case"focus":(ir(i)||"true"===i.contentEditable)&&(Dr=i,Fr=t,$r=null);break;case"blur":$r=Fr=Dr=null;break;case"mousedown":jr=!0;break;case"contextmenu":case"mouseup":case"dragend":return jr=!1,Ur(n,r);case"selectionchange":if(Lr)break;case"keydown":case"keyup":return Ur(n,r)}return null}},Wr=$n.extend({animationName:null,elapsedTime:null,pseudoElement:null}),Hr=$n.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),qr=wr.extend({relatedTarget:null});function Qr(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var Br={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Kr={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Xr=wr.extend({key:function(e){if(e.key){var t=Br[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=Qr(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?Kr[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:_r,charCode:function(e){return"keypress"===e.type?Qr(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?Qr(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),Yr=Pr.extend({dataTransfer:null}),Gr=wr.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:_r}),Zr=$n.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),Jr=Pr.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),ei={eventTypes:Rt,extractEvents:function(e,t,n,r){var i=Lt.get(e);if(!i)return null;switch(e){case"keypress":if(0===Qr(n))return null;case"keydown":case"keyup":e=Xr;break;case"blur":case"focus":e=qr;break;case"click":if(2===n.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=Pr;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=Yr;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=Gr;break;case We:case He:case qe:e=Wr;break;case Qe:e=Zr;break;case"scroll":e=wr;break;case"wheel":e=Jr;break;case"copy":case"cut":case"paste":e=Hr;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=Nr;break;default:e=$n}return zn(t=e.getPooled(i,t,n,r)),t}};if(g)throw Error(l(101));g=Array.prototype.slice.call("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),b(),p=Tn,h=_n,m=En,T({SimpleEventPlugin:ei,EnterLeaveEventPlugin:Or,ChangeEventPlugin:br,SelectEventPlugin:Vr,BeforeInputEventPlugin:nr});var ti=[],ni=-1;function ri(e){0>ni||(e.current=ti[ni],ti[ni]=null,ni--)}function ii(e,t){ti[++ni]=e.current,e.current=t}var oi={},li={current:oi},ai={current:!1},ui=oi;function si(e,t){var n=e.type.contextTypes;if(!n)return oi;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var i,o={};for(i in n)o[i]=t[i];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=o),o}function ci(e){return null!==(e=e.childContextTypes)&&void 0!==e}function fi(){ri(ai),ri(li)}function di(e,t,n){if(li.current!==oi)throw Error(l(168));ii(li,t),ii(ai,n)}function pi(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var o in r=r.getChildContext())if(!(o in e))throw Error(l(108,me(t)||"Unknown",o));return i({},n,{},r)}function hi(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||oi,ui=li.current,ii(li,e),ii(ai,ai.current),!0}function mi(e,t,n){var r=e.stateNode;if(!r)throw Error(l(169));n?(e=pi(e,t,ui),r.__reactInternalMemoizedMergedChildContext=e,ri(ai),ri(li),ii(li,e)):ri(ai),ii(ai,n)}var yi=o.unstable_runWithPriority,gi=o.unstable_scheduleCallback,vi=o.unstable_cancelCallback,bi=o.unstable_requestPaint,wi=o.unstable_now,ki=o.unstable_getCurrentPriorityLevel,xi=o.unstable_ImmediatePriority,_i=o.unstable_UserBlockingPriority,Ei=o.unstable_NormalPriority,Ti=o.unstable_LowPriority,Si=o.unstable_IdlePriority,Ci={},Pi=o.unstable_shouldYield,Ni=void 0!==bi?bi:function(){},Mi=null,Oi=null,zi=!1,Ai=wi(),Ri=1e4>Ai?wi:function(){return wi()-Ai};function Li(){switch(ki()){case xi:return 99;case _i:return 98;case Ei:return 97;case Ti:return 96;case Si:return 95;default:throw Error(l(332))}}function Ii(e){switch(e){case 99:return xi;case 98:return _i;case 97:return Ei;case 96:return Ti;case 95:return Si;default:throw Error(l(332))}}function Di(e,t){return e=Ii(e),yi(e,t)}function Fi(e,t,n){return e=Ii(e),gi(e,t,n)}function $i(e){return null===Mi?(Mi=[e],Oi=gi(xi,Ui)):Mi.push(e),Ci}function ji(){if(null!==Oi){var e=Oi;Oi=null,vi(e)}Ui()}function Ui(){if(!zi&&null!==Mi){zi=!0;var e=0;try{var t=Mi;Di(99,(function(){for(;e<t.length;e++){var n=t[e];do{n=n(!0)}while(null!==n)}})),Mi=null}catch(t){throw null!==Mi&&(Mi=Mi.slice(e+1)),gi(xi,ji),t}finally{zi=!1}}}function Vi(e,t,n){return 1073741821-(1+((1073741821-e+t/10)/(n/=10)|0))*n}function Wi(e,t){if(e&&e.defaultProps)for(var n in t=i({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}var Hi={current:null},qi=null,Qi=null,Bi=null;function Ki(){Bi=Qi=qi=null}function Xi(e){var t=Hi.current;ri(Hi),e.type._context._currentValue=t}function Yi(e,t){for(;null!==e;){var n=e.alternate;if(e.childExpirationTime<t)e.childExpirationTime=t,null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t);else{if(!(null!==n&&n.childExpirationTime<t))break;n.childExpirationTime=t}e=e.return}}function Gi(e,t){qi=e,Bi=Qi=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(e.expirationTime>=t&&(Tl=!0),e.firstContext=null)}function Zi(e,t){if(Bi!==e&&!1!==t&&0!==t)if("number"==typeof t&&1073741823!==t||(Bi=e,t=1073741823),t={context:e,observedBits:t,next:null},null===Qi){if(null===qi)throw Error(l(308));Qi=t,qi.dependencies={expirationTime:0,firstContext:t,responders:null}}else Qi=Qi.next=t;return e._currentValue}var Ji=!1;function eo(e){e.updateQueue={baseState:e.memoizedState,baseQueue:null,shared:{pending:null},effects:null}}function to(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,baseQueue:e.baseQueue,shared:e.shared,effects:e.effects})}function no(e,t){return(e={expirationTime:e,suspenseConfig:t,tag:0,payload:null,callback:null,next:null}).next=e}function ro(e,t){if(null!==(e=e.updateQueue)){var n=(e=e.shared).pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}}function io(e,t){var n=e.alternate;null!==n&&to(n,e),null===(n=(e=e.updateQueue).baseQueue)?(e.baseQueue=t.next=t,t.next=t):(t.next=n.next,n.next=t)}function oo(e,t,n,r){var o=e.updateQueue;Ji=!1;var l=o.baseQueue,a=o.shared.pending;if(null!==a){if(null!==l){var u=l.next;l.next=a.next,a.next=u}l=a,o.shared.pending=null,null!==(u=e.alternate)&&null!==(u=u.updateQueue)&&(u.baseQueue=a)}if(null!==l){u=l.next;var s=o.baseState,c=0,f=null,d=null,p=null;if(null!==u)for(var h=u;;){if((a=h.expirationTime)<r){var m={expirationTime:h.expirationTime,suspenseConfig:h.suspenseConfig,tag:h.tag,payload:h.payload,callback:h.callback,next:null};null===p?(d=p=m,f=s):p=p.next=m,a>c&&(c=a)}else{null!==p&&(p=p.next={expirationTime:1073741823,suspenseConfig:h.suspenseConfig,tag:h.tag,payload:h.payload,callback:h.callback,next:null}),eu(a,h.suspenseConfig);e:{var y=e,g=h;switch(a=t,m=n,g.tag){case 1:if("function"==typeof(y=g.payload)){s=y.call(m,s,a);break e}s=y;break e;case 3:y.effectTag=-4097&y.effectTag|64;case 0:if(null===(a="function"==typeof(y=g.payload)?y.call(m,s,a):y)||void 0===a)break e;s=i({},s,a);break e;case 2:Ji=!0}}null!==h.callback&&(e.effectTag|=32,null===(a=o.effects)?o.effects=[h]:a.push(h))}if(null===(h=h.next)||h===u){if(null===(a=o.shared.pending))break;h=l.next=a.next,a.next=u,o.baseQueue=l=a,o.shared.pending=null}}null===p?f=s:p.next=d,o.baseState=f,o.baseQueue=p,tu(c),e.expirationTime=c,e.memoizedState=s}}function lo(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],i=r.callback;if(null!==i){if(r.callback=null,r=i,i=n,"function"!=typeof r)throw Error(l(191,r));r.call(i)}}}var ao=X.ReactCurrentBatchConfig,uo=(new r.Component).refs;function so(e,t,n,r){n=null===(n=n(r,t=e.memoizedState))||void 0===n?t:i({},t,n),e.memoizedState=n,0===e.expirationTime&&(e.updateQueue.baseState=n)}var co={isMounted:function(e){return!!(e=e._reactInternalFiber)&&Ye(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=Va(),i=ao.suspense;(i=no(r=Wa(r,e,i),i)).payload=t,null!=n&&(i.callback=n),ro(e,i),Ha(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=Va(),i=ao.suspense;(i=no(r=Wa(r,e,i),i)).tag=1,i.payload=t,null!=n&&(i.callback=n),ro(e,i),Ha(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=Va(),r=ao.suspense;(r=no(n=Wa(n,e,r),r)).tag=2,null!=t&&(r.callback=t),ro(e,r),Ha(e,n)}};function fo(e,t,n,r,i,o,l){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,o,l):!(t.prototype&&t.prototype.isPureReactComponent&&Rr(n,r)&&Rr(i,o))}function po(e,t,n){var r=!1,i=oi,o=t.contextType;return"object"==typeof o&&null!==o?o=Zi(o):(i=ci(t)?ui:li.current,o=(r=null!==(r=t.contextTypes)&&void 0!==r)?si(e,i):oi),t=new t(n,o),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=co,e.stateNode=t,t._reactInternalFiber=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=i,e.__reactInternalMemoizedMaskedChildContext=o),t}function ho(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&co.enqueueReplaceState(t,t.state,null)}function mo(e,t,n,r){var i=e.stateNode;i.props=n,i.state=e.memoizedState,i.refs=uo,eo(e);var o=t.contextType;"object"==typeof o&&null!==o?i.context=Zi(o):(o=ci(t)?ui:li.current,i.context=si(e,o)),oo(e,n,i,r),i.state=e.memoizedState,"function"==typeof(o=t.getDerivedStateFromProps)&&(so(e,t,o,n),i.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof i.getSnapshotBeforeUpdate||"function"!=typeof i.UNSAFE_componentWillMount&&"function"!=typeof i.componentWillMount||(t=i.state,"function"==typeof i.componentWillMount&&i.componentWillMount(),"function"==typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount(),t!==i.state&&co.enqueueReplaceState(i,i.state,null),oo(e,n,i,r),i.state=e.memoizedState),"function"==typeof i.componentDidMount&&(e.effectTag|=4)}var yo=Array.isArray;function go(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(l(309));var r=n.stateNode}if(!r)throw Error(l(147,e));var i=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===i?t.ref:((t=function(e){var t=r.refs;t===uo&&(t=r.refs={}),null===e?delete t[i]:t[i]=e})._stringRef=i,t)}if("string"!=typeof e)throw Error(l(284));if(!n._owner)throw Error(l(290,e))}return e}function vo(e,t){if("textarea"!==e.type)throw Error(l(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,""))}function bo(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function i(e,t){return(e=vu(e,t)).index=0,e.sibling=null,e}function o(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function a(t){return e&&null===t.alternate&&(t.effectTag=2),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=ku(n,e.mode,r)).return=e,t):((t=i(t,n)).return=e,t)}function s(e,t,n,r){return null!==t&&t.elementType===n.type?((r=i(t,n.props)).ref=go(e,t,n),r.return=e,r):((r=bu(n.type,n.key,n.props,null,e.mode,r)).ref=go(e,t,n),r.return=e,r)}function c(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=xu(n,e.mode,r)).return=e,t):((t=i(t,n.children||[])).return=e,t)}function f(e,t,n,r,o){return null===t||7!==t.tag?((t=wu(n,e.mode,r,o)).return=e,t):((t=i(t,n)).return=e,t)}function d(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=ku(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case J:return(n=bu(t.type,t.key,t.props,null,e.mode,n)).ref=go(e,null,t),n.return=e,n;case ee:return(t=xu(t,e.mode,n)).return=e,t}if(yo(t)||he(t))return(t=wu(t,e.mode,n,null)).return=e,t;vo(e,t)}return null}function p(e,t,n,r){var i=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==i?null:u(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case J:return n.key===i?n.type===te?f(e,t,n.props.children,r,i):s(e,t,n,r):null;case ee:return n.key===i?c(e,t,n,r):null}if(yo(n)||he(n))return null!==i?null:f(e,t,n,r,null);vo(e,n)}return null}function h(e,t,n,r,i){if("string"==typeof r||"number"==typeof r)return u(t,e=e.get(n)||null,""+r,i);if("object"==typeof r&&null!==r){switch(r.$$typeof){case J:return e=e.get(null===r.key?n:r.key)||null,r.type===te?f(t,e,r.props.children,i,r.key):s(t,e,r,i);case ee:return c(t,e=e.get(null===r.key?n:r.key)||null,r,i)}if(yo(r)||he(r))return f(t,e=e.get(n)||null,r,i,null);vo(t,r)}return null}function m(i,l,a,u){for(var s=null,c=null,f=l,m=l=0,y=null;null!==f&&m<a.length;m++){f.index>m?(y=f,f=null):y=f.sibling;var g=p(i,f,a[m],u);if(null===g){null===f&&(f=y);break}e&&f&&null===g.alternate&&t(i,f),l=o(g,l,m),null===c?s=g:c.sibling=g,c=g,f=y}if(m===a.length)return n(i,f),s;if(null===f){for(;m<a.length;m++)null!==(f=d(i,a[m],u))&&(l=o(f,l,m),null===c?s=f:c.sibling=f,c=f);return s}for(f=r(i,f);m<a.length;m++)null!==(y=h(f,i,m,a[m],u))&&(e&&null!==y.alternate&&f.delete(null===y.key?m:y.key),l=o(y,l,m),null===c?s=y:c.sibling=y,c=y);return e&&f.forEach((function(e){return t(i,e)})),s}function y(i,a,u,s){var c=he(u);if("function"!=typeof c)throw Error(l(150));if(null==(u=c.call(u)))throw Error(l(151));for(var f=c=null,m=a,y=a=0,g=null,v=u.next();null!==m&&!v.done;y++,v=u.next()){m.index>y?(g=m,m=null):g=m.sibling;var b=p(i,m,v.value,s);if(null===b){null===m&&(m=g);break}e&&m&&null===b.alternate&&t(i,m),a=o(b,a,y),null===f?c=b:f.sibling=b,f=b,m=g}if(v.done)return n(i,m),c;if(null===m){for(;!v.done;y++,v=u.next())null!==(v=d(i,v.value,s))&&(a=o(v,a,y),null===f?c=v:f.sibling=v,f=v);return c}for(m=r(i,m);!v.done;y++,v=u.next())null!==(v=h(m,i,y,v.value,s))&&(e&&null!==v.alternate&&m.delete(null===v.key?y:v.key),a=o(v,a,y),null===f?c=v:f.sibling=v,f=v);return e&&m.forEach((function(e){return t(i,e)})),c}return function(e,r,o,u){var s="object"==typeof o&&null!==o&&o.type===te&&null===o.key;s&&(o=o.props.children);var c="object"==typeof o&&null!==o;if(c)switch(o.$$typeof){case J:e:{for(c=o.key,s=r;null!==s;){if(s.key===c){switch(s.tag){case 7:if(o.type===te){n(e,s.sibling),(r=i(s,o.props.children)).return=e,e=r;break e}break;default:if(s.elementType===o.type){n(e,s.sibling),(r=i(s,o.props)).ref=go(e,s,o),r.return=e,e=r;break e}}n(e,s);break}t(e,s),s=s.sibling}o.type===te?((r=wu(o.props.children,e.mode,u,o.key)).return=e,e=r):((u=bu(o.type,o.key,o.props,null,e.mode,u)).ref=go(e,r,o),u.return=e,e=u)}return a(e);case ee:e:{for(s=o.key;null!==r;){if(r.key===s){if(4===r.tag&&r.stateNode.containerInfo===o.containerInfo&&r.stateNode.implementation===o.implementation){n(e,r.sibling),(r=i(r,o.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=xu(o,e.mode,u)).return=e,e=r}return a(e)}if("string"==typeof o||"number"==typeof o)return o=""+o,null!==r&&6===r.tag?(n(e,r.sibling),(r=i(r,o)).return=e,e=r):(n(e,r),(r=ku(o,e.mode,u)).return=e,e=r),a(e);if(yo(o))return m(e,r,o,u);if(he(o))return y(e,r,o,u);if(c&&vo(e,o),void 0===o&&!s)switch(e.tag){case 1:case 0:throw e=e.type,Error(l(152,e.displayName||e.name||"Component"))}return n(e,r)}}var wo=bo(!0),ko=bo(!1),xo={},_o={current:xo},Eo={current:xo},To={current:xo};function So(e){if(e===xo)throw Error(l(174));return e}function Co(e,t){switch(ii(To,t),ii(Eo,e),ii(_o,xo),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:Re(null,"");break;default:t=Re(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}ri(_o),ii(_o,t)}function Po(){ri(_o),ri(Eo),ri(To)}function No(e){So(To.current);var t=So(_o.current),n=Re(t,e.type);t!==n&&(ii(Eo,e),ii(_o,n))}function Mo(e){Eo.current===e&&(ri(_o),ri(Eo))}var Oo={current:0};function zo(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(64&t.effectTag))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}function Ao(e,t){return{responder:e,props:t}}var Ro=X.ReactCurrentDispatcher,Lo=X.ReactCurrentBatchConfig,Io=0,Do=null,Fo=null,$o=null,jo=!1;function Uo(){throw Error(l(321))}function Vo(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!zr(e[n],t[n]))return!1;return!0}function Wo(e,t,n,r,i,o){if(Io=o,Do=t,t.memoizedState=null,t.updateQueue=null,t.expirationTime=0,Ro.current=null===e||null===e.memoizedState?dl:pl,e=n(r,i),t.expirationTime===Io){o=0;do{if(t.expirationTime=0,!(25>o))throw Error(l(301));o+=1,$o=Fo=null,t.updateQueue=null,Ro.current=hl,e=n(r,i)}while(t.expirationTime===Io)}if(Ro.current=fl,t=null!==Fo&&null!==Fo.next,Io=0,$o=Fo=Do=null,jo=!1,t)throw Error(l(300));return e}function Ho(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===$o?Do.memoizedState=$o=e:$o=$o.next=e,$o}function qo(){if(null===Fo){var e=Do.alternate;e=null!==e?e.memoizedState:null}else e=Fo.next;var t=null===$o?Do.memoizedState:$o.next;if(null!==t)$o=t,Fo=e;else{if(null===e)throw Error(l(310));e={memoizedState:(Fo=e).memoizedState,baseState:Fo.baseState,baseQueue:Fo.baseQueue,queue:Fo.queue,next:null},null===$o?Do.memoizedState=$o=e:$o=$o.next=e}return $o}function Qo(e,t){return"function"==typeof t?t(e):t}function Bo(e){var t=qo(),n=t.queue;if(null===n)throw Error(l(311));n.lastRenderedReducer=e;var r=Fo,i=r.baseQueue,o=n.pending;if(null!==o){if(null!==i){var a=i.next;i.next=o.next,o.next=a}r.baseQueue=i=o,n.pending=null}if(null!==i){i=i.next,r=r.baseState;var u=a=o=null,s=i;do{var c=s.expirationTime;if(c<Io){var f={expirationTime:s.expirationTime,suspenseConfig:s.suspenseConfig,action:s.action,eagerReducer:s.eagerReducer,eagerState:s.eagerState,next:null};null===u?(a=u=f,o=r):u=u.next=f,c>Do.expirationTime&&(Do.expirationTime=c,tu(c))}else null!==u&&(u=u.next={expirationTime:1073741823,suspenseConfig:s.suspenseConfig,action:s.action,eagerReducer:s.eagerReducer,eagerState:s.eagerState,next:null}),eu(c,s.suspenseConfig),r=s.eagerReducer===e?s.eagerState:e(r,s.action);s=s.next}while(null!==s&&s!==i);null===u?o=r:u.next=a,zr(r,t.memoizedState)||(Tl=!0),t.memoizedState=r,t.baseState=o,t.baseQueue=u,n.lastRenderedState=r}return[t.memoizedState,n.dispatch]}function Ko(e){var t=qo(),n=t.queue;if(null===n)throw Error(l(311));n.lastRenderedReducer=e;var r=n.dispatch,i=n.pending,o=t.memoizedState;if(null!==i){n.pending=null;var a=i=i.next;do{o=e(o,a.action),a=a.next}while(a!==i);zr(o,t.memoizedState)||(Tl=!0),t.memoizedState=o,null===t.baseQueue&&(t.baseState=o),n.lastRenderedState=o}return[o,r]}function Xo(e){var t=Ho();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:Qo,lastRenderedState:e}).dispatch=cl.bind(null,Do,e),[t.memoizedState,e]}function Yo(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=Do.updateQueue)?(t={lastEffect:null},Do.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function Go(){return qo().memoizedState}function Zo(e,t,n,r){var i=Ho();Do.effectTag|=e,i.memoizedState=Yo(1|t,n,void 0,void 0===r?null:r)}function Jo(e,t,n,r){var i=qo();r=void 0===r?null:r;var o=void 0;if(null!==Fo){var l=Fo.memoizedState;if(o=l.destroy,null!==r&&Vo(r,l.deps))return void Yo(t,n,o,r)}Do.effectTag|=e,i.memoizedState=Yo(1|t,n,o,r)}function el(e,t){return Zo(516,4,e,t)}function tl(e,t){return Jo(516,4,e,t)}function nl(e,t){return Jo(4,2,e,t)}function rl(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function il(e,t,n){return n=null!=n?n.concat([e]):null,Jo(4,2,rl.bind(null,t,e),n)}function ol(){}function ll(e,t){return Ho().memoizedState=[e,void 0===t?null:t],e}function al(e,t){var n=qo();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Vo(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function ul(e,t){var n=qo();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Vo(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function sl(e,t,n){var r=Li();Di(98>r?98:r,(function(){e(!0)})),Di(97<r?97:r,(function(){var r=Lo.suspense;Lo.suspense=void 0===t?null:t;try{e(!1),n()}finally{Lo.suspense=r}}))}function cl(e,t,n){var r=Va(),i=ao.suspense;i={expirationTime:r=Wa(r,e,i),suspenseConfig:i,action:n,eagerReducer:null,eagerState:null,next:null};var o=t.pending;if(null===o?i.next=i:(i.next=o.next,o.next=i),t.pending=i,o=e.alternate,e===Do||null!==o&&o===Do)jo=!0,i.expirationTime=Io,Do.expirationTime=Io;else{if(0===e.expirationTime&&(null===o||0===o.expirationTime)&&null!==(o=t.lastRenderedReducer))try{var l=t.lastRenderedState,a=o(l,n);if(i.eagerReducer=o,i.eagerState=a,zr(a,l))return}catch(e){}Ha(e,r)}}var fl={readContext:Zi,useCallback:Uo,useContext:Uo,useEffect:Uo,useImperativeHandle:Uo,useLayoutEffect:Uo,useMemo:Uo,useReducer:Uo,useRef:Uo,useState:Uo,useDebugValue:Uo,useResponder:Uo,useDeferredValue:Uo,useTransition:Uo},dl={readContext:Zi,useCallback:ll,useContext:Zi,useEffect:el,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,Zo(4,2,rl.bind(null,t,e),n)},useLayoutEffect:function(e,t){return Zo(4,2,e,t)},useMemo:function(e,t){var n=Ho();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=Ho();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=cl.bind(null,Do,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},Ho().memoizedState=e},useState:Xo,useDebugValue:ol,useResponder:Ao,useDeferredValue:function(e,t){var n=Xo(e),r=n[0],i=n[1];return el((function(){var n=Lo.suspense;Lo.suspense=void 0===t?null:t;try{i(e)}finally{Lo.suspense=n}}),[e,t]),r},useTransition:function(e){var t=Xo(!1),n=t[0];return t=t[1],[ll(sl.bind(null,t,e),[t,e]),n]}},pl={readContext:Zi,useCallback:al,useContext:Zi,useEffect:tl,useImperativeHandle:il,useLayoutEffect:nl,useMemo:ul,useReducer:Bo,useRef:Go,useState:function(){return Bo(Qo)},useDebugValue:ol,useResponder:Ao,useDeferredValue:function(e,t){var n=Bo(Qo),r=n[0],i=n[1];return tl((function(){var n=Lo.suspense;Lo.suspense=void 0===t?null:t;try{i(e)}finally{Lo.suspense=n}}),[e,t]),r},useTransition:function(e){var t=Bo(Qo),n=t[0];return t=t[1],[al(sl.bind(null,t,e),[t,e]),n]}},hl={readContext:Zi,useCallback:al,useContext:Zi,useEffect:tl,useImperativeHandle:il,useLayoutEffect:nl,useMemo:ul,useReducer:Ko,useRef:Go,useState:function(){return Ko(Qo)},useDebugValue:ol,useResponder:Ao,useDeferredValue:function(e,t){var n=Ko(Qo),r=n[0],i=n[1];return tl((function(){var n=Lo.suspense;Lo.suspense=void 0===t?null:t;try{i(e)}finally{Lo.suspense=n}}),[e,t]),r},useTransition:function(e){var t=Ko(Qo),n=t[0];return t=t[1],[al(sl.bind(null,t,e),[t,e]),n]}},ml=null,yl=null,gl=!1;function vl(e,t){var n=yu(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function bl(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function wl(e){if(gl){var t=yl;if(t){var n=t;if(!bl(e,t)){if(!(t=yn(n.nextSibling))||!bl(e,t))return e.effectTag=-1025&e.effectTag|2,gl=!1,void(ml=e);vl(ml,n)}ml=e,yl=yn(t.firstChild)}else e.effectTag=-1025&e.effectTag|2,gl=!1,ml=e}}function kl(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;ml=e}function xl(e){if(e!==ml)return!1;if(!gl)return kl(e),gl=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!pn(t,e.memoizedProps))for(t=yl;t;)vl(e,t),t=yn(t.nextSibling);if(kl(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(l(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){yl=yn(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}yl=null}}else yl=ml?yn(e.stateNode.nextSibling):null;return!0}function _l(){yl=ml=null,gl=!1}var El=X.ReactCurrentOwner,Tl=!1;function Sl(e,t,n,r){t.child=null===e?ko(t,null,n,r):wo(t,e.child,n,r)}function Cl(e,t,n,r,i){n=n.render;var o=t.ref;return Gi(t,i),r=Wo(e,t,n,r,o,i),null===e||Tl?(t.effectTag|=1,Sl(e,t,r,i),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=i&&(e.expirationTime=0),Hl(e,t,i))}function Pl(e,t,n,r,i,o){if(null===e){var l=n.type;return"function"!=typeof l||gu(l)||void 0!==l.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=bu(n.type,null,r,null,t.mode,o)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=l,Nl(e,t,l,r,i,o))}return l=e.child,i<o&&(i=l.memoizedProps,(n=null!==(n=n.compare)?n:Rr)(i,r)&&e.ref===t.ref)?Hl(e,t,o):(t.effectTag|=1,(e=vu(l,r)).ref=t.ref,e.return=t,t.child=e)}function Nl(e,t,n,r,i,o){return null!==e&&Rr(e.memoizedProps,r)&&e.ref===t.ref&&(Tl=!1,i<o)?(t.expirationTime=e.expirationTime,Hl(e,t,o)):Ol(e,t,n,r,o)}function Ml(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function Ol(e,t,n,r,i){var o=ci(n)?ui:li.current;return o=si(t,o),Gi(t,i),n=Wo(e,t,n,r,o,i),null===e||Tl?(t.effectTag|=1,Sl(e,t,n,i),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=i&&(e.expirationTime=0),Hl(e,t,i))}function zl(e,t,n,r,i){if(ci(n)){var o=!0;hi(t)}else o=!1;if(Gi(t,i),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),po(t,n,r),mo(t,n,r,i),r=!0;else if(null===e){var l=t.stateNode,a=t.memoizedProps;l.props=a;var u=l.context,s=n.contextType;s="object"==typeof s&&null!==s?Zi(s):si(t,s=ci(n)?ui:li.current);var c=n.getDerivedStateFromProps,f="function"==typeof c||"function"==typeof l.getSnapshotBeforeUpdate;f||"function"!=typeof l.UNSAFE_componentWillReceiveProps&&"function"!=typeof l.componentWillReceiveProps||(a!==r||u!==s)&&ho(t,l,r,s),Ji=!1;var d=t.memoizedState;l.state=d,oo(t,r,l,i),u=t.memoizedState,a!==r||d!==u||ai.current||Ji?("function"==typeof c&&(so(t,n,c,r),u=t.memoizedState),(a=Ji||fo(t,n,a,r,d,u,s))?(f||"function"!=typeof l.UNSAFE_componentWillMount&&"function"!=typeof l.componentWillMount||("function"==typeof l.componentWillMount&&l.componentWillMount(),"function"==typeof l.UNSAFE_componentWillMount&&l.UNSAFE_componentWillMount()),"function"==typeof l.componentDidMount&&(t.effectTag|=4)):("function"==typeof l.componentDidMount&&(t.effectTag|=4),t.memoizedProps=r,t.memoizedState=u),l.props=r,l.state=u,l.context=s,r=a):("function"==typeof l.componentDidMount&&(t.effectTag|=4),r=!1)}else l=t.stateNode,to(e,t),a=t.memoizedProps,l.props=t.type===t.elementType?a:Wi(t.type,a),u=l.context,s="object"==typeof(s=n.contextType)&&null!==s?Zi(s):si(t,s=ci(n)?ui:li.current),(f="function"==typeof(c=n.getDerivedStateFromProps)||"function"==typeof l.getSnapshotBeforeUpdate)||"function"!=typeof l.UNSAFE_componentWillReceiveProps&&"function"!=typeof l.componentWillReceiveProps||(a!==r||u!==s)&&ho(t,l,r,s),Ji=!1,u=t.memoizedState,l.state=u,oo(t,r,l,i),d=t.memoizedState,a!==r||u!==d||ai.current||Ji?("function"==typeof c&&(so(t,n,c,r),d=t.memoizedState),(c=Ji||fo(t,n,a,r,u,d,s))?(f||"function"!=typeof l.UNSAFE_componentWillUpdate&&"function"!=typeof l.componentWillUpdate||("function"==typeof l.componentWillUpdate&&l.componentWillUpdate(r,d,s),"function"==typeof l.UNSAFE_componentWillUpdate&&l.UNSAFE_componentWillUpdate(r,d,s)),"function"==typeof l.componentDidUpdate&&(t.effectTag|=4),"function"==typeof l.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!=typeof l.componentDidUpdate||a===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof l.getSnapshotBeforeUpdate||a===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),t.memoizedProps=r,t.memoizedState=d),l.props=r,l.state=d,l.context=s,r=c):("function"!=typeof l.componentDidUpdate||a===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof l.getSnapshotBeforeUpdate||a===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),r=!1);return Al(e,t,n,r,o,i)}function Al(e,t,n,r,i,o){Ml(e,t);var l=0!=(64&t.effectTag);if(!r&&!l)return i&&mi(t,n,!1),Hl(e,t,o);r=t.stateNode,El.current=t;var a=l&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.effectTag|=1,null!==e&&l?(t.child=wo(t,e.child,null,o),t.child=wo(t,null,a,o)):Sl(e,t,a,o),t.memoizedState=r.state,i&&mi(t,n,!0),t.child}function Rl(e){var t=e.stateNode;t.pendingContext?di(0,t.pendingContext,t.pendingContext!==t.context):t.context&&di(0,t.context,!1),Co(e,t.containerInfo)}var Ll,Il,Dl,Fl,$l={dehydrated:null,retryTime:0};function jl(e,t,n){var r,i=t.mode,o=t.pendingProps,l=Oo.current,a=!1;if((r=0!=(64&t.effectTag))||(r=0!=(2&l)&&(null===e||null!==e.memoizedState)),r?(a=!0,t.effectTag&=-65):null!==e&&null===e.memoizedState||void 0===o.fallback||!0===o.unstable_avoidThisFallback||(l|=1),ii(Oo,1&l),null===e){if(void 0!==o.fallback&&wl(t),a){if(a=o.fallback,(o=wu(null,i,0,null)).return=t,0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,o.child=e;null!==e;)e.return=o,e=e.sibling;return(n=wu(a,i,n,null)).return=t,o.sibling=n,t.memoizedState=$l,t.child=o,n}return i=o.children,t.memoizedState=null,t.child=ko(t,null,i,n)}if(null!==e.memoizedState){if(i=(e=e.child).sibling,a){if(o=o.fallback,(n=vu(e,e.pendingProps)).return=t,0==(2&t.mode)&&(a=null!==t.memoizedState?t.child.child:t.child)!==e.child)for(n.child=a;null!==a;)a.return=n,a=a.sibling;return(i=vu(i,o)).return=t,n.sibling=i,n.childExpirationTime=0,t.memoizedState=$l,t.child=n,i}return n=wo(t,e.child,o.children,n),t.memoizedState=null,t.child=n}if(e=e.child,a){if(a=o.fallback,(o=wu(null,i,0,null)).return=t,o.child=e,null!==e&&(e.return=o),0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,o.child=e;null!==e;)e.return=o,e=e.sibling;return(n=wu(a,i,n,null)).return=t,o.sibling=n,n.effectTag|=2,o.childExpirationTime=0,t.memoizedState=$l,t.child=o,n}return t.memoizedState=null,t.child=wo(t,e,o.children,n)}function Ul(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t),Yi(e.return,t)}function Vl(e,t,n,r,i,o){var l=e.memoizedState;null===l?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailExpiration:0,tailMode:i,lastEffect:o}:(l.isBackwards=t,l.rendering=null,l.renderingStartTime=0,l.last=r,l.tail=n,l.tailExpiration=0,l.tailMode=i,l.lastEffect=o)}function Wl(e,t,n){var r=t.pendingProps,i=r.revealOrder,o=r.tail;if(Sl(e,t,r.children,n),0!=(2&(r=Oo.current)))r=1&r|2,t.effectTag|=64;else{if(null!==e&&0!=(64&e.effectTag))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Ul(e,n);else if(19===e.tag)Ul(e,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(ii(Oo,r),0==(2&t.mode))t.memoizedState=null;else switch(i){case"forwards":for(n=t.child,i=null;null!==n;)null!==(e=n.alternate)&&null===zo(e)&&(i=n),n=n.sibling;null===(n=i)?(i=t.child,t.child=null):(i=n.sibling,n.sibling=null),Vl(t,!1,i,n,o,t.lastEffect);break;case"backwards":for(n=null,i=t.child,t.child=null;null!==i;){if(null!==(e=i.alternate)&&null===zo(e)){t.child=i;break}e=i.sibling,i.sibling=n,n=i,i=e}Vl(t,!0,n,null,o,t.lastEffect);break;case"together":Vl(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function Hl(e,t,n){null!==e&&(t.dependencies=e.dependencies);var r=t.expirationTime;if(0!==r&&tu(r),t.childExpirationTime<n)return null;if(null!==e&&t.child!==e.child)throw Error(l(153));if(null!==t.child){for(n=vu(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=vu(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function ql(e,t){switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function Ql(e,t,n){var r=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return ci(t.type)&&fi(),null;case 3:return Po(),ri(ai),ri(li),(n=t.stateNode).pendingContext&&(n.context=n.pendingContext,n.pendingContext=null),null!==e&&null!==e.child||!xl(t)||(t.effectTag|=4),Il(t),null;case 5:Mo(t),n=So(To.current);var o=t.type;if(null!==e&&null!=t.stateNode)Dl(e,t,o,r,n),e.ref!==t.ref&&(t.effectTag|=128);else{if(!r){if(null===t.stateNode)throw Error(l(166));return null}if(e=So(_o.current),xl(t)){r=t.stateNode,o=t.type;var a=t.memoizedProps;switch(r[bn]=t,r[wn]=a,o){case"iframe":case"object":case"embed":Ht("load",r);break;case"video":case"audio":for(e=0;e<Be.length;e++)Ht(Be[e],r);break;case"source":Ht("error",r);break;case"img":case"image":case"link":Ht("error",r),Ht("load",r);break;case"form":Ht("reset",r),Ht("submit",r);break;case"details":Ht("toggle",r);break;case"input":xe(r,a),Ht("invalid",r),nn(n,"onChange");break;case"select":r._wrapperState={wasMultiple:!!a.multiple},Ht("invalid",r),nn(n,"onChange");break;case"textarea":Me(r,a),Ht("invalid",r),nn(n,"onChange")}for(var u in Jt(o,a),e=null,a)if(a.hasOwnProperty(u)){var s=a[u];"children"===u?"string"==typeof s?r.textContent!==s&&(e=["children",s]):"number"==typeof s&&r.textContent!==""+s&&(e=["children",""+s]):_.hasOwnProperty(u)&&null!=s&&nn(n,u)}switch(o){case"input":be(r),Te(r,a,!0);break;case"textarea":be(r),ze(r);break;case"select":case"option":break;default:"function"==typeof a.onClick&&(r.onclick=rn)}n=e,t.updateQueue=n,null!==n&&(t.effectTag|=4)}else{switch(u=9===n.nodeType?n:n.ownerDocument,e===tn&&(e=Ae(o)),e===tn?"script"===o?((e=u.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=u.createElement(o,{is:r.is}):(e=u.createElement(o),"select"===o&&(u=e,r.multiple?u.multiple=!0:r.size&&(u.size=r.size))):e=u.createElementNS(e,o),e[bn]=t,e[wn]=r,Ll(e,t,!1,!1),t.stateNode=e,u=en(o,r),o){case"iframe":case"object":case"embed":Ht("load",e),s=r;break;case"video":case"audio":for(s=0;s<Be.length;s++)Ht(Be[s],e);s=r;break;case"source":Ht("error",e),s=r;break;case"img":case"image":case"link":Ht("error",e),Ht("load",e),s=r;break;case"form":Ht("reset",e),Ht("submit",e),s=r;break;case"details":Ht("toggle",e),s=r;break;case"input":xe(e,r),s=ke(e,r),Ht("invalid",e),nn(n,"onChange");break;case"option":s=Ce(e,r);break;case"select":e._wrapperState={wasMultiple:!!r.multiple},s=i({},r,{value:void 0}),Ht("invalid",e),nn(n,"onChange");break;case"textarea":Me(e,r),s=Ne(e,r),Ht("invalid",e),nn(n,"onChange");break;default:s=r}Jt(o,s);var c=s;for(a in c)if(c.hasOwnProperty(a)){var f=c[a];"style"===a?Gt(e,f):"dangerouslySetInnerHTML"===a?null!=(f=f?f.__html:void 0)&&Ie(e,f):"children"===a?"string"==typeof f?("textarea"!==o||""!==f)&&De(e,f):"number"==typeof f&&De(e,""+f):"suppressContentEditableWarning"!==a&&"suppressHydrationWarning"!==a&&"autoFocus"!==a&&(_.hasOwnProperty(a)?null!=f&&nn(n,a):null!=f&&Y(e,a,f,u))}switch(o){case"input":be(e),Te(e,r,!1);break;case"textarea":be(e),ze(e);break;case"option":null!=r.value&&e.setAttribute("value",""+ge(r.value));break;case"select":e.multiple=!!r.multiple,null!=(n=r.value)?Pe(e,!!r.multiple,n,!1):null!=r.defaultValue&&Pe(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof s.onClick&&(e.onclick=rn)}dn(o,r)&&(t.effectTag|=4)}null!==t.ref&&(t.effectTag|=128)}return null;case 6:if(e&&null!=t.stateNode)Fl(e,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(l(166));n=So(To.current),So(_o.current),xl(t)?(n=t.stateNode,r=t.memoizedProps,n[bn]=t,n.nodeValue!==r&&(t.effectTag|=4)):((n=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[bn]=t,t.stateNode=n)}return null;case 13:return ri(Oo),r=t.memoizedState,0!=(64&t.effectTag)?(t.expirationTime=n,t):(n=null!==r,r=!1,null===e?void 0!==t.memoizedProps.fallback&&xl(t):(r=null!==(o=e.memoizedState),n||null===o||null!==(o=e.child.sibling)&&(null!==(a=t.firstEffect)?(t.firstEffect=o,o.nextEffect=a):(t.firstEffect=t.lastEffect=o,o.nextEffect=null),o.effectTag=8)),n&&!r&&0!=(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!=(1&Oo.current)?_a===ya&&(_a=ga):(_a!==ya&&_a!==ga||(_a=va),0!==Pa&&null!==wa&&(Eu(wa,xa),Tu(wa,Pa)))),(n||r)&&(t.effectTag|=4),null);case 4:return Po(),Il(t),null;case 10:return Xi(t),null;case 17:return ci(t.type)&&fi(),null;case 19:if(ri(Oo),null===(r=t.memoizedState))return null;if(o=0!=(64&t.effectTag),null===(a=r.rendering)){if(o)ql(r,!1);else if(_a!==ya||null!==e&&0!=(64&e.effectTag))for(a=t.child;null!==a;){if(null!==(e=zo(a))){for(t.effectTag|=64,ql(r,!1),null!==(o=e.updateQueue)&&(t.updateQueue=o,t.effectTag|=4),null===r.lastEffect&&(t.firstEffect=null),t.lastEffect=r.lastEffect,r=t.child;null!==r;)a=n,(o=r).effectTag&=2,o.nextEffect=null,o.firstEffect=null,o.lastEffect=null,null===(e=o.alternate)?(o.childExpirationTime=0,o.expirationTime=a,o.child=null,o.memoizedProps=null,o.memoizedState=null,o.updateQueue=null,o.dependencies=null):(o.childExpirationTime=e.childExpirationTime,o.expirationTime=e.expirationTime,o.child=e.child,o.memoizedProps=e.memoizedProps,o.memoizedState=e.memoizedState,o.updateQueue=e.updateQueue,a=e.dependencies,o.dependencies=null===a?null:{expirationTime:a.expirationTime,firstContext:a.firstContext,responders:a.responders}),r=r.sibling;return ii(Oo,1&Oo.current|2),t.child}a=a.sibling}}else{if(!o)if(null!==(e=zo(a))){if(t.effectTag|=64,o=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.effectTag|=4),ql(r,!0),null===r.tail&&"hidden"===r.tailMode&&!a.alternate)return null!==(t=t.lastEffect=r.lastEffect)&&(t.nextEffect=null),null}else 2*Ri()-r.renderingStartTime>r.tailExpiration&&1<n&&(t.effectTag|=64,o=!0,ql(r,!1),t.expirationTime=t.childExpirationTime=n-1);r.isBackwards?(a.sibling=t.child,t.child=a):(null!==(n=r.last)?n.sibling=a:t.child=a,r.last=a)}return null!==r.tail?(0===r.tailExpiration&&(r.tailExpiration=Ri()+500),n=r.tail,r.rendering=n,r.tail=n.sibling,r.lastEffect=t.lastEffect,r.renderingStartTime=Ri(),n.sibling=null,t=Oo.current,ii(Oo,o?1&t|2:1&t),n):null}throw Error(l(156,t.tag))}function Bl(e){switch(e.tag){case 1:ci(e.type)&&fi();var t=e.effectTag;return 4096&t?(e.effectTag=-4097&t|64,e):null;case 3:if(Po(),ri(ai),ri(li),0!=(64&(t=e.effectTag)))throw Error(l(285));return e.effectTag=-4097&t|64,e;case 5:return Mo(e),null;case 13:return ri(Oo),4096&(t=e.effectTag)?(e.effectTag=-4097&t|64,e):null;case 19:return ri(Oo),null;case 4:return Po(),null;case 10:return Xi(e),null;default:return null}}function Kl(e,t){return{value:e,source:t,stack:ye(t)}}Ll=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Il=function(){},Dl=function(e,t,n,r,o){var l=e.memoizedProps;if(l!==r){var a,u,s=t.stateNode;switch(So(_o.current),e=null,n){case"input":l=ke(s,l),r=ke(s,r),e=[];break;case"option":l=Ce(s,l),r=Ce(s,r),e=[];break;case"select":l=i({},l,{value:void 0}),r=i({},r,{value:void 0}),e=[];break;case"textarea":l=Ne(s,l),r=Ne(s,r),e=[];break;default:"function"!=typeof l.onClick&&"function"==typeof r.onClick&&(s.onclick=rn)}for(a in Jt(n,r),n=null,l)if(!r.hasOwnProperty(a)&&l.hasOwnProperty(a)&&null!=l[a])if("style"===a)for(u in s=l[a])s.hasOwnProperty(u)&&(n||(n={}),n[u]="");else"dangerouslySetInnerHTML"!==a&&"children"!==a&&"suppressContentEditableWarning"!==a&&"suppressHydrationWarning"!==a&&"autoFocus"!==a&&(_.hasOwnProperty(a)?e||(e=[]):(e=e||[]).push(a,null));for(a in r){var c=r[a];if(s=null!=l?l[a]:void 0,r.hasOwnProperty(a)&&c!==s&&(null!=c||null!=s))if("style"===a)if(s){for(u in s)!s.hasOwnProperty(u)||c&&c.hasOwnProperty(u)||(n||(n={}),n[u]="");for(u in c)c.hasOwnProperty(u)&&s[u]!==c[u]&&(n||(n={}),n[u]=c[u])}else n||(e||(e=[]),e.push(a,n)),n=c;else"dangerouslySetInnerHTML"===a?(c=c?c.__html:void 0,s=s?s.__html:void 0,null!=c&&s!==c&&(e=e||[]).push(a,c)):"children"===a?s===c||"string"!=typeof c&&"number"!=typeof c||(e=e||[]).push(a,""+c):"suppressContentEditableWarning"!==a&&"suppressHydrationWarning"!==a&&(_.hasOwnProperty(a)?(null!=c&&nn(o,a),e||s===c||(e=[])):(e=e||[]).push(a,c))}n&&(e=e||[]).push("style",n),o=e,(t.updateQueue=o)&&(t.effectTag|=4)}},Fl=function(e,t,n,r){n!==r&&(t.effectTag|=4)};var Xl="function"==typeof WeakSet?WeakSet:Set;function Yl(e,t){var n=t.source,r=t.stack;null===r&&null!==n&&(r=ye(n)),null!==n&&me(n.type),t=t.value,null!==e&&1===e.tag&&me(e.type);try{console.error(t)}catch(e){setTimeout((function(){throw e}))}}function Gl(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){du(e,t)}else t.current=null}function Zl(e,t){switch(t.tag){case 0:case 11:case 15:case 22:return;case 1:if(256&t.effectTag&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:Wi(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}return;case 3:case 5:case 6:case 4:case 17:return}throw Error(l(163))}function Jl(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.destroy;n.destroy=void 0,void 0!==r&&r()}n=n.next}while(n!==t)}}function ea(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.create;n.destroy=r()}n=n.next}while(n!==t)}}function ta(e,t,n){switch(n.tag){case 0:case 11:case 15:case 22:return void ea(3,n);case 1:if(e=n.stateNode,4&n.effectTag)if(null===t)e.componentDidMount();else{var r=n.elementType===n.type?t.memoizedProps:Wi(n.type,t.memoizedProps);e.componentDidUpdate(r,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate)}return void(null!==(t=n.updateQueue)&&lo(n,t,e));case 3:if(null!==(t=n.updateQueue)){if(e=null,null!==n.child)switch(n.child.tag){case 5:e=n.child.stateNode;break;case 1:e=n.child.stateNode}lo(n,t,e)}return;case 5:return e=n.stateNode,void(null===t&&4&n.effectTag&&dn(n.type,n.memoizedProps)&&e.focus());case 6:case 4:case 12:return;case 13:return void(null===n.memoizedState&&(n=n.alternate,null!==n&&(n=n.memoizedState,null!==n&&(n=n.dehydrated,null!==n&&At(n)))));case 19:case 17:case 20:case 21:return}throw Error(l(163))}function na(e,t,n){switch("function"==typeof mu&&mu(t),t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var r=e.next;Di(97<n?97:n,(function(){var e=r;do{var n=e.destroy;if(void 0!==n){var i=t;try{n()}catch(e){du(i,e)}}e=e.next}while(e!==r)}))}break;case 1:Gl(t),"function"==typeof(n=t.stateNode).componentWillUnmount&&function(e,t){try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(t){du(e,t)}}(t,n);break;case 5:Gl(t);break;case 4:la(e,t,n)}}function ra(e){var t=e.alternate;e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null,e.dependencies=null,e.alternate=null,e.firstEffect=null,e.lastEffect=null,e.pendingProps=null,e.memoizedProps=null,e.stateNode=null,null!==t&&ra(t)}function ia(e){return 5===e.tag||3===e.tag||4===e.tag}function oa(e){e:{for(var t=e.return;null!==t;){if(ia(t)){var n=t;break e}t=t.return}throw Error(l(160))}switch(t=n.stateNode,n.tag){case 5:var r=!1;break;case 3:case 4:t=t.containerInfo,r=!0;break;default:throw Error(l(161))}16&n.effectTag&&(De(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||ia(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}r?function e(t,n,r){var i=t.tag,o=5===i||6===i;if(o)t=o?t.stateNode:t.stateNode.instance,n?8===r.nodeType?r.parentNode.insertBefore(t,n):r.insertBefore(t,n):(8===r.nodeType?(n=r.parentNode).insertBefore(t,r):(n=r).appendChild(t),null!=(r=r._reactRootContainer)||null!==n.onclick||(n.onclick=rn));else if(4!==i&&null!==(t=t.child))for(e(t,n,r),t=t.sibling;null!==t;)e(t,n,r),t=t.sibling}(e,n,t):function e(t,n,r){var i=t.tag,o=5===i||6===i;if(o)t=o?t.stateNode:t.stateNode.instance,n?r.insertBefore(t,n):r.appendChild(t);else if(4!==i&&null!==(t=t.child))for(e(t,n,r),t=t.sibling;null!==t;)e(t,n,r),t=t.sibling}(e,n,t)}function la(e,t,n){for(var r,i,o=t,a=!1;;){if(!a){a=o.return;e:for(;;){if(null===a)throw Error(l(160));switch(r=a.stateNode,a.tag){case 5:i=!1;break e;case 3:case 4:r=r.containerInfo,i=!0;break e}a=a.return}a=!0}if(5===o.tag||6===o.tag){e:for(var u=e,s=o,c=n,f=s;;)if(na(u,f,c),null!==f.child&&4!==f.tag)f.child.return=f,f=f.child;else{if(f===s)break e;for(;null===f.sibling;){if(null===f.return||f.return===s)break e;f=f.return}f.sibling.return=f.return,f=f.sibling}i?(u=r,s=o.stateNode,8===u.nodeType?u.parentNode.removeChild(s):u.removeChild(s)):r.removeChild(o.stateNode)}else if(4===o.tag){if(null!==o.child){r=o.stateNode.containerInfo,i=!0,o.child.return=o,o=o.child;continue}}else if(na(e,o,n),null!==o.child){o.child.return=o,o=o.child;continue}if(o===t)break;for(;null===o.sibling;){if(null===o.return||o.return===t)return;4===(o=o.return).tag&&(a=!1)}o.sibling.return=o.return,o=o.sibling}}function aa(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:return void Jl(3,t);case 1:return;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps,i=null!==e?e.memoizedProps:r;e=t.type;var o=t.updateQueue;if(t.updateQueue=null,null!==o){for(n[wn]=r,"input"===e&&"radio"===r.type&&null!=r.name&&_e(n,r),en(e,i),t=en(e,r),i=0;i<o.length;i+=2){var a=o[i],u=o[i+1];"style"===a?Gt(n,u):"dangerouslySetInnerHTML"===a?Ie(n,u):"children"===a?De(n,u):Y(n,a,u,t)}switch(e){case"input":Ee(n,r);break;case"textarea":Oe(n,r);break;case"select":t=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(e=r.value)?Pe(n,!!r.multiple,e,!1):t!==!!r.multiple&&(null!=r.defaultValue?Pe(n,!!r.multiple,r.defaultValue,!0):Pe(n,!!r.multiple,r.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(l(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((t=t.stateNode).hydrate&&(t.hydrate=!1,At(t.containerInfo)));case 12:return;case 13:if(n=t,null===t.memoizedState?r=!1:(r=!0,n=t.child,Ma=Ri()),null!==n)e:for(e=n;;){if(5===e.tag)o=e.stateNode,r?"function"==typeof(o=o.style).setProperty?o.setProperty("display","none","important"):o.display="none":(o=e.stateNode,i=void 0!==(i=e.memoizedProps.style)&&null!==i&&i.hasOwnProperty("display")?i.display:null,o.style.display=Yt("display",i));else if(6===e.tag)e.stateNode.nodeValue=r?"":e.memoizedProps;else{if(13===e.tag&&null!==e.memoizedState&&null===e.memoizedState.dehydrated){(o=e.child.sibling).return=e,e=o;continue}if(null!==e.child){e.child.return=e,e=e.child;continue}}if(e===n)break;for(;null===e.sibling;){if(null===e.return||e.return===n)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}return void ua(t);case 19:return void ua(t);case 17:return}throw Error(l(163))}function ua(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new Xl),t.forEach((function(t){var r=function(e,t){var n=e.stateNode;null!==n&&n.delete(t),0==(t=0)&&(t=Wa(t=Va(),e,null)),null!==(e=qa(e,t))&&Ba(e)}.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}var sa="function"==typeof WeakMap?WeakMap:Map;function ca(e,t,n){(n=no(n,null)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){za||(za=!0,Aa=r),Yl(e,t)},n}function fa(e,t,n){(n=no(n,null)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var i=t.value;n.payload=function(){return Yl(e,t),r(i)}}var o=e.stateNode;return null!==o&&"function"==typeof o.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===Ra?Ra=new Set([this]):Ra.add(this),Yl(e,t));var n=t.stack;this.componentDidCatch(t.value,{componentStack:null!==n?n:""})}),n}var da,pa=Math.ceil,ha=X.ReactCurrentDispatcher,ma=X.ReactCurrentOwner,ya=0,ga=3,va=4,ba=0,wa=null,ka=null,xa=0,_a=ya,Ea=null,Ta=1073741823,Sa=1073741823,Ca=null,Pa=0,Na=!1,Ma=0,Oa=null,za=!1,Aa=null,Ra=null,La=!1,Ia=null,Da=90,Fa=null,$a=0,ja=null,Ua=0;function Va(){return 0!=(48&ba)?1073741821-(Ri()/10|0):0!==Ua?Ua:Ua=1073741821-(Ri()/10|0)}function Wa(e,t,n){if(0==(2&(t=t.mode)))return 1073741823;var r=Li();if(0==(4&t))return 99===r?1073741823:1073741822;if(0!=(16&ba))return xa;if(null!==n)e=Vi(e,0|n.timeoutMs||5e3,250);else switch(r){case 99:e=1073741823;break;case 98:e=Vi(e,150,100);break;case 97:case 96:e=Vi(e,5e3,250);break;case 95:e=2;break;default:throw Error(l(326))}return null!==wa&&e===xa&&--e,e}function Ha(e,t){if(50<$a)throw $a=0,ja=null,Error(l(185));if(null!==(e=qa(e,t))){var n=Li();1073741823===t?0!=(8&ba)&&0==(48&ba)?Ka(e):(Ba(e),0===ba&&ji()):Ba(e),0==(4&ba)||98!==n&&99!==n||(null===Fa?Fa=new Map([[e,t]]):(void 0===(n=Fa.get(e))||n>t)&&Fa.set(e,t))}}function qa(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t);var r=e.return,i=null;if(null===r&&3===e.tag)i=e.stateNode;else for(;null!==r;){if(n=r.alternate,r.childExpirationTime<t&&(r.childExpirationTime=t),null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t),null===r.return&&3===r.tag){i=r.stateNode;break}r=r.return}return null!==i&&(wa===i&&(tu(t),_a===va&&Eu(i,xa)),Tu(i,t)),i}function Qa(e){var t=e.lastExpiredTime;if(0!==t)return t;if(!_u(e,t=e.firstPendingTime))return t;var n=e.lastPingedTime;return 2>=(e=n>(e=e.nextKnownPendingLevel)?n:e)&&t!==e?0:e}function Ba(e){if(0!==e.lastExpiredTime)e.callbackExpirationTime=1073741823,e.callbackPriority=99,e.callbackNode=$i(Ka.bind(null,e));else{var t=Qa(e),n=e.callbackNode;if(0===t)null!==n&&(e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90);else{var r=Va();if(r=1073741823===t?99:1===t||2===t?95:0>=(r=10*(1073741821-t)-10*(1073741821-r))?99:250>=r?98:5250>=r?97:95,null!==n){var i=e.callbackPriority;if(e.callbackExpirationTime===t&&i>=r)return;n!==Ci&&vi(n)}e.callbackExpirationTime=t,e.callbackPriority=r,t=1073741823===t?$i(Ka.bind(null,e)):Fi(r,function e(t,n){if(Ua=0,n)return Su(t,n=Va()),Ba(t),null;var r=Qa(t);if(0!==r){if(n=t.callbackNode,0!=(48&ba))throw Error(l(327));if(su(),t===wa&&r===xa||Ga(t,r),null!==ka){var i=ba;ba|=16;for(var o=Ja();;)try{ru();break}catch(e){Za(t,e)}if(Ki(),ba=i,ha.current=o,1===_a)throw n=Ea,Ga(t,r),Eu(t,r),Ba(t),n;if(null===ka)switch(o=t.finishedWork=t.current.alternate,t.finishedExpirationTime=r,i=_a,wa=null,i){case ya:case 1:throw Error(l(345));case 2:Su(t,2<r?2:r);break;case ga:if(Eu(t,r),r===(i=t.lastSuspendedTime)&&(t.nextKnownPendingLevel=lu(o)),1073741823===Ta&&10<(o=Ma+500-Ri())){if(Na){var a=t.lastPingedTime;if(0===a||a>=r){t.lastPingedTime=r,Ga(t,r);break}}if(0!==(a=Qa(t))&&a!==r)break;if(0!==i&&i!==r){t.lastPingedTime=i;break}t.timeoutHandle=hn(au.bind(null,t),o);break}au(t);break;case va:if(Eu(t,r),r===(i=t.lastSuspendedTime)&&(t.nextKnownPendingLevel=lu(o)),Na&&(0===(o=t.lastPingedTime)||o>=r)){t.lastPingedTime=r,Ga(t,r);break}if(0!==(o=Qa(t))&&o!==r)break;if(0!==i&&i!==r){t.lastPingedTime=i;break}if(1073741823!==Sa?i=10*(1073741821-Sa)-Ri():1073741823===Ta?i=0:(i=10*(1073741821-Ta)-5e3,0>(i=(o=Ri())-i)&&(i=0),(r=10*(1073741821-r)-o)<(i=(120>i?120:480>i?480:1080>i?1080:1920>i?1920:3e3>i?3e3:4320>i?4320:1960*pa(i/1960))-i)&&(i=r)),10<i){t.timeoutHandle=hn(au.bind(null,t),i);break}au(t);break;case 5:if(1073741823!==Ta&&null!==Ca){a=Ta;var u=Ca;if(0>=(i=0|u.busyMinDurationMs)?i=0:(o=0|u.busyDelayMs,i=(a=Ri()-(10*(1073741821-a)-(0|u.timeoutMs||5e3)))<=o?0:o+i-a),10<i){Eu(t,r),t.timeoutHandle=hn(au.bind(null,t),i);break}}au(t);break;default:throw Error(l(329))}if(Ba(t),t.callbackNode===n)return e.bind(null,t)}}return null}.bind(null,e),{timeout:10*(1073741821-t)-Ri()}),e.callbackNode=t}}}function Ka(e){var t=e.lastExpiredTime;if(t=0!==t?t:1073741823,0!=(48&ba))throw Error(l(327));if(su(),e===wa&&t===xa||Ga(e,t),null!==ka){var n=ba;ba|=16;for(var r=Ja();;)try{nu();break}catch(t){Za(e,t)}if(Ki(),ba=n,ha.current=r,1===_a)throw n=Ea,Ga(e,t),Eu(e,t),Ba(e),n;if(null!==ka)throw Error(l(261));e.finishedWork=e.current.alternate,e.finishedExpirationTime=t,wa=null,au(e),Ba(e)}return null}function Xa(e,t){var n=ba;ba|=1;try{return e(t)}finally{0===(ba=n)&&ji()}}function Ya(e,t){var n=ba;ba&=-2,ba|=8;try{return e(t)}finally{0===(ba=n)&&ji()}}function Ga(e,t){e.finishedWork=null,e.finishedExpirationTime=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,mn(n)),null!==ka)for(n=ka.return;null!==n;){var r=n;switch(r.tag){case 1:null!==(r=r.type.childContextTypes)&&void 0!==r&&fi();break;case 3:Po(),ri(ai),ri(li);break;case 5:Mo(r);break;case 4:Po();break;case 13:case 19:ri(Oo);break;case 10:Xi(r)}n=n.return}wa=e,ka=vu(e.current,null),xa=t,_a=ya,Ea=null,Sa=Ta=1073741823,Ca=null,Pa=0,Na=!1}function Za(e,t){for(;;){try{if(Ki(),Ro.current=fl,jo)for(var n=Do.memoizedState;null!==n;){var r=n.queue;null!==r&&(r.pending=null),n=n.next}if(Io=0,$o=Fo=Do=null,jo=!1,null===ka||null===ka.return)return _a=1,Ea=t,ka=null;e:{var i=e,o=ka.return,l=ka,a=t;if(t=xa,l.effectTag|=2048,l.firstEffect=l.lastEffect=null,null!==a&&"object"==typeof a&&"function"==typeof a.then){var u=a;if(0==(2&l.mode)){var s=l.alternate;s?(l.updateQueue=s.updateQueue,l.memoizedState=s.memoizedState,l.expirationTime=s.expirationTime):(l.updateQueue=null,l.memoizedState=null)}var c=0!=(1&Oo.current),f=o;do{var d;if(d=13===f.tag){var p=f.memoizedState;if(null!==p)d=null!==p.dehydrated;else{var h=f.memoizedProps;d=void 0!==h.fallback&&(!0!==h.unstable_avoidThisFallback||!c)}}if(d){var m=f.updateQueue;if(null===m){var y=new Set;y.add(u),f.updateQueue=y}else m.add(u);if(0==(2&f.mode)){if(f.effectTag|=64,l.effectTag&=-2981,1===l.tag)if(null===l.alternate)l.tag=17;else{var g=no(1073741823,null);g.tag=2,ro(l,g)}l.expirationTime=1073741823;break e}a=void 0,l=t;var v=i.pingCache;if(null===v?(v=i.pingCache=new sa,a=new Set,v.set(u,a)):void 0===(a=v.get(u))&&(a=new Set,v.set(u,a)),!a.has(l)){a.add(l);var b=pu.bind(null,i,u,l);u.then(b,b)}f.effectTag|=4096,f.expirationTime=t;break e}f=f.return}while(null!==f);a=Error((me(l.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+ye(l))}5!==_a&&(_a=2),a=Kl(a,l),f=o;do{switch(f.tag){case 3:u=a,f.effectTag|=4096,f.expirationTime=t,io(f,ca(f,u,t));break e;case 1:u=a;var w=f.type,k=f.stateNode;if(0==(64&f.effectTag)&&("function"==typeof w.getDerivedStateFromError||null!==k&&"function"==typeof k.componentDidCatch&&(null===Ra||!Ra.has(k)))){f.effectTag|=4096,f.expirationTime=t,io(f,fa(f,u,t));break e}}f=f.return}while(null!==f)}ka=ou(ka)}catch(e){t=e;continue}break}}function Ja(){var e=ha.current;return ha.current=fl,null===e?fl:e}function eu(e,t){e<Ta&&2<e&&(Ta=e),null!==t&&e<Sa&&2<e&&(Sa=e,Ca=t)}function tu(e){e>Pa&&(Pa=e)}function nu(){for(;null!==ka;)ka=iu(ka)}function ru(){for(;null!==ka&&!Pi();)ka=iu(ka)}function iu(e){var t=da(e.alternate,e,xa);return e.memoizedProps=e.pendingProps,null===t&&(t=ou(e)),ma.current=null,t}function ou(e){ka=e;do{var t=ka.alternate;if(e=ka.return,0==(2048&ka.effectTag)){if(t=Ql(t,ka,xa),1===xa||1!==ka.childExpirationTime){for(var n=0,r=ka.child;null!==r;){var i=r.expirationTime,o=r.childExpirationTime;i>n&&(n=i),o>n&&(n=o),r=r.sibling}ka.childExpirationTime=n}if(null!==t)return t;null!==e&&0==(2048&e.effectTag)&&(null===e.firstEffect&&(e.firstEffect=ka.firstEffect),null!==ka.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=ka.firstEffect),e.lastEffect=ka.lastEffect),1<ka.effectTag&&(null!==e.lastEffect?e.lastEffect.nextEffect=ka:e.firstEffect=ka,e.lastEffect=ka))}else{if(null!==(t=Bl(ka)))return t.effectTag&=2047,t;null!==e&&(e.firstEffect=e.lastEffect=null,e.effectTag|=2048)}if(null!==(t=ka.sibling))return t;ka=e}while(null!==ka);return _a===ya&&(_a=5),null}function lu(e){var t=e.expirationTime;return t>(e=e.childExpirationTime)?t:e}function au(e){var t=Li();return Di(99,function(e,t){do{su()}while(null!==Ia);if(0!=(48&ba))throw Error(l(327));var n=e.finishedWork,r=e.finishedExpirationTime;if(null===n)return null;if(e.finishedWork=null,e.finishedExpirationTime=0,n===e.current)throw Error(l(177));e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90,e.nextKnownPendingLevel=0;var i=lu(n);if(e.firstPendingTime=i,r<=e.lastSuspendedTime?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:r<=e.firstSuspendedTime&&(e.firstSuspendedTime=r-1),r<=e.lastPingedTime&&(e.lastPingedTime=0),r<=e.lastExpiredTime&&(e.lastExpiredTime=0),e===wa&&(ka=wa=null,xa=0),1<n.effectTag?null!==n.lastEffect?(n.lastEffect.nextEffect=n,i=n.firstEffect):i=n:i=n.firstEffect,null!==i){var o=ba;ba|=32,ma.current=null,cn=Wt;var a=un();if(sn(a)){if("selectionStart"in a)var u={start:a.selectionStart,end:a.selectionEnd};else e:{var s=(u=(u=a.ownerDocument)&&u.defaultView||window).getSelection&&u.getSelection();if(s&&0!==s.rangeCount){u=s.anchorNode;var c=s.anchorOffset,f=s.focusNode;s=s.focusOffset;try{u.nodeType,f.nodeType}catch(e){u=null;break e}var d=0,p=-1,h=-1,m=0,y=0,g=a,v=null;t:for(;;){for(var b;g!==u||0!==c&&3!==g.nodeType||(p=d+c),g!==f||0!==s&&3!==g.nodeType||(h=d+s),3===g.nodeType&&(d+=g.nodeValue.length),null!==(b=g.firstChild);)v=g,g=b;for(;;){if(g===a)break t;if(v===u&&++m===c&&(p=d),v===f&&++y===s&&(h=d),null!==(b=g.nextSibling))break;v=(g=v).parentNode}g=b}u=-1===p||-1===h?null:{start:p,end:h}}else u=null}u=u||{start:0,end:0}}else u=null;fn={activeElementDetached:null,focusedElem:a,selectionRange:u},Wt=!1,Oa=i;do{try{uu()}catch(e){if(null===Oa)throw Error(l(330));du(Oa,e),Oa=Oa.nextEffect}}while(null!==Oa);Oa=i;do{try{for(a=e,u=t;null!==Oa;){var w=Oa.effectTag;if(16&w&&De(Oa.stateNode,""),128&w){var k=Oa.alternate;if(null!==k){var x=k.ref;null!==x&&("function"==typeof x?x(null):x.current=null)}}switch(1038&w){case 2:oa(Oa),Oa.effectTag&=-3;break;case 6:oa(Oa),Oa.effectTag&=-3,aa(Oa.alternate,Oa);break;case 1024:Oa.effectTag&=-1025;break;case 1028:Oa.effectTag&=-1025,aa(Oa.alternate,Oa);break;case 4:aa(Oa.alternate,Oa);break;case 8:la(a,c=Oa,u),ra(c)}Oa=Oa.nextEffect}}catch(e){if(null===Oa)throw Error(l(330));du(Oa,e),Oa=Oa.nextEffect}}while(null!==Oa);if(x=fn,k=un(),w=x.focusedElem,u=x.selectionRange,k!==w&&w&&w.ownerDocument&&function e(t,n){return!(!t||!n)&&(t===n||(!t||3!==t.nodeType)&&(n&&3===n.nodeType?e(t,n.parentNode):"contains"in t?t.contains(n):!!t.compareDocumentPosition&&!!(16&t.compareDocumentPosition(n))))}(w.ownerDocument.documentElement,w)){null!==u&&sn(w)&&(k=u.start,void 0===(x=u.end)&&(x=k),"selectionStart"in w?(w.selectionStart=k,w.selectionEnd=Math.min(x,w.value.length)):(x=(k=w.ownerDocument||document)&&k.defaultView||window).getSelection&&(x=x.getSelection(),c=w.textContent.length,a=Math.min(u.start,c),u=void 0===u.end?a:Math.min(u.end,c),!x.extend&&a>u&&(c=u,u=a,a=c),c=an(w,a),f=an(w,u),c&&f&&(1!==x.rangeCount||x.anchorNode!==c.node||x.anchorOffset!==c.offset||x.focusNode!==f.node||x.focusOffset!==f.offset)&&((k=k.createRange()).setStart(c.node,c.offset),x.removeAllRanges(),a>u?(x.addRange(k),x.extend(f.node,f.offset)):(k.setEnd(f.node,f.offset),x.addRange(k))))),k=[];for(x=w;x=x.parentNode;)1===x.nodeType&&k.push({element:x,left:x.scrollLeft,top:x.scrollTop});for("function"==typeof w.focus&&w.focus(),w=0;w<k.length;w++)(x=k[w]).element.scrollLeft=x.left,x.element.scrollTop=x.top}Wt=!!cn,fn=cn=null,e.current=n,Oa=i;do{try{for(w=e;null!==Oa;){var _=Oa.effectTag;if(36&_&&ta(w,Oa.alternate,Oa),128&_){k=void 0;var E=Oa.ref;if(null!==E){var T=Oa.stateNode;switch(Oa.tag){case 5:k=T;break;default:k=T}"function"==typeof E?E(k):E.current=k}}Oa=Oa.nextEffect}}catch(e){if(null===Oa)throw Error(l(330));du(Oa,e),Oa=Oa.nextEffect}}while(null!==Oa);Oa=null,Ni(),ba=o}else e.current=n;if(La)La=!1,Ia=e,Da=t;else for(Oa=i;null!==Oa;)t=Oa.nextEffect,Oa.nextEffect=null,Oa=t;if(0===(t=e.firstPendingTime)&&(Ra=null),1073741823===t?e===ja?$a++:($a=0,ja=e):$a=0,"function"==typeof hu&&hu(n.stateNode,r),Ba(e),za)throw za=!1,e=Aa,Aa=null,e;return 0!=(8&ba)||ji(),null}.bind(null,e,t)),null}function uu(){for(;null!==Oa;){var e=Oa.effectTag;0!=(256&e)&&Zl(Oa.alternate,Oa),0==(512&e)||La||(La=!0,Fi(97,(function(){return su(),null}))),Oa=Oa.nextEffect}}function su(){if(90!==Da){var e=97<Da?97:Da;return Da=90,Di(e,cu)}}function cu(){if(null===Ia)return!1;var e=Ia;if(Ia=null,0!=(48&ba))throw Error(l(331));var t=ba;for(ba|=32,e=e.current.firstEffect;null!==e;){try{var n=e;if(0!=(512&n.effectTag))switch(n.tag){case 0:case 11:case 15:case 22:Jl(5,n),ea(5,n)}}catch(t){if(null===e)throw Error(l(330));du(e,t)}n=e.nextEffect,e.nextEffect=null,e=n}return ba=t,ji(),!0}function fu(e,t,n){ro(e,t=ca(e,t=Kl(n,t),1073741823)),null!==(e=qa(e,1073741823))&&Ba(e)}function du(e,t){if(3===e.tag)fu(e,e,t);else for(var n=e.return;null!==n;){if(3===n.tag){fu(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Ra||!Ra.has(r))){ro(n,e=fa(n,e=Kl(t,e),1073741823)),null!==(n=qa(n,1073741823))&&Ba(n);break}}n=n.return}}function pu(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),wa===e&&xa===n?_a===va||_a===ga&&1073741823===Ta&&Ri()-Ma<500?Ga(e,xa):Na=!0:_u(e,n)&&(0!==(t=e.lastPingedTime)&&t<n||(e.lastPingedTime=n,Ba(e)))}da=function(e,t,n){var r=t.expirationTime;if(null!==e){var i=t.pendingProps;if(e.memoizedProps!==i||ai.current)Tl=!0;else{if(r<n){switch(Tl=!1,t.tag){case 3:Rl(t),_l();break;case 5:if(No(t),4&t.mode&&1!==n&&i.hidden)return t.expirationTime=t.childExpirationTime=1,null;break;case 1:ci(t.type)&&hi(t);break;case 4:Co(t,t.stateNode.containerInfo);break;case 10:r=t.memoizedProps.value,i=t.type._context,ii(Hi,i._currentValue),i._currentValue=r;break;case 13:if(null!==t.memoizedState)return 0!==(r=t.child.childExpirationTime)&&r>=n?jl(e,t,n):(ii(Oo,1&Oo.current),null!==(t=Hl(e,t,n))?t.sibling:null);ii(Oo,1&Oo.current);break;case 19:if(r=t.childExpirationTime>=n,0!=(64&e.effectTag)){if(r)return Wl(e,t,n);t.effectTag|=64}if(null!==(i=t.memoizedState)&&(i.rendering=null,i.tail=null),ii(Oo,Oo.current),!r)return null}return Hl(e,t,n)}Tl=!1}}else Tl=!1;switch(t.expirationTime=0,t.tag){case 2:if(r=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,i=si(t,li.current),Gi(t,n),i=Wo(null,t,r,e,i,n),t.effectTag|=1,"object"==typeof i&&null!==i&&"function"==typeof i.render&&void 0===i.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,ci(r)){var o=!0;hi(t)}else o=!1;t.memoizedState=null!==i.state&&void 0!==i.state?i.state:null,eo(t);var a=r.getDerivedStateFromProps;"function"==typeof a&&so(t,r,a,e),i.updater=co,t.stateNode=i,i._reactInternalFiber=t,mo(t,r,e,n),t=Al(null,t,r,!0,o,n)}else t.tag=0,Sl(null,t,i,n),t=t.child;return t;case 16:e:{if(i=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,function(e){if(-1===e._status){e._status=0;var t=e._ctor;t=t(),e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}}(i),1!==i._status)throw i._result;switch(i=i._result,t.type=i,o=t.tag=function(e){if("function"==typeof e)return gu(e)?1:0;if(null!=e){if((e=e.$$typeof)===ae)return 11;if(e===ce)return 14}return 2}(i),e=Wi(i,e),o){case 0:t=Ol(null,t,i,e,n);break e;case 1:t=zl(null,t,i,e,n);break e;case 11:t=Cl(null,t,i,e,n);break e;case 14:t=Pl(null,t,i,Wi(i.type,e),r,n);break e}throw Error(l(306,i,""))}return t;case 0:return r=t.type,i=t.pendingProps,Ol(e,t,r,i=t.elementType===r?i:Wi(r,i),n);case 1:return r=t.type,i=t.pendingProps,zl(e,t,r,i=t.elementType===r?i:Wi(r,i),n);case 3:if(Rl(t),r=t.updateQueue,null===e||null===r)throw Error(l(282));if(r=t.pendingProps,i=null!==(i=t.memoizedState)?i.element:null,to(e,t),oo(t,r,null,n),(r=t.memoizedState.element)===i)_l(),t=Hl(e,t,n);else{if((i=t.stateNode.hydrate)&&(yl=yn(t.stateNode.containerInfo.firstChild),ml=t,i=gl=!0),i)for(n=ko(t,null,r,n),t.child=n;n;)n.effectTag=-3&n.effectTag|1024,n=n.sibling;else Sl(e,t,r,n),_l();t=t.child}return t;case 5:return No(t),null===e&&wl(t),r=t.type,i=t.pendingProps,o=null!==e?e.memoizedProps:null,a=i.children,pn(r,i)?a=null:null!==o&&pn(r,o)&&(t.effectTag|=16),Ml(e,t),4&t.mode&&1!==n&&i.hidden?(t.expirationTime=t.childExpirationTime=1,t=null):(Sl(e,t,a,n),t=t.child),t;case 6:return null===e&&wl(t),null;case 13:return jl(e,t,n);case 4:return Co(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=wo(t,null,r,n):Sl(e,t,r,n),t.child;case 11:return r=t.type,i=t.pendingProps,Cl(e,t,r,i=t.elementType===r?i:Wi(r,i),n);case 7:return Sl(e,t,t.pendingProps,n),t.child;case 8:case 12:return Sl(e,t,t.pendingProps.children,n),t.child;case 10:e:{r=t.type._context,i=t.pendingProps,a=t.memoizedProps,o=i.value;var u=t.type._context;if(ii(Hi,u._currentValue),u._currentValue=o,null!==a)if(u=a.value,0==(o=zr(u,o)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(u,o):1073741823))){if(a.children===i.children&&!ai.current){t=Hl(e,t,n);break e}}else for(null!==(u=t.child)&&(u.return=t);null!==u;){var s=u.dependencies;if(null!==s){a=u.child;for(var c=s.firstContext;null!==c;){if(c.context===r&&0!=(c.observedBits&o)){1===u.tag&&((c=no(n,null)).tag=2,ro(u,c)),u.expirationTime<n&&(u.expirationTime=n),null!==(c=u.alternate)&&c.expirationTime<n&&(c.expirationTime=n),Yi(u.return,n),s.expirationTime<n&&(s.expirationTime=n);break}c=c.next}}else a=10===u.tag&&u.type===t.type?null:u.child;if(null!==a)a.return=u;else for(a=u;null!==a;){if(a===t){a=null;break}if(null!==(u=a.sibling)){u.return=a.return,a=u;break}a=a.return}u=a}Sl(e,t,i.children,n),t=t.child}return t;case 9:return i=t.type,r=(o=t.pendingProps).children,Gi(t,n),r=r(i=Zi(i,o.unstable_observedBits)),t.effectTag|=1,Sl(e,t,r,n),t.child;case 14:return o=Wi(i=t.type,t.pendingProps),Pl(e,t,i,o=Wi(i.type,o),r,n);case 15:return Nl(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,i=t.pendingProps,i=t.elementType===r?i:Wi(r,i),null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),t.tag=1,ci(r)?(e=!0,hi(t)):e=!1,Gi(t,n),po(t,r,i),mo(t,r,i,n),Al(null,t,r,!0,e,n);case 19:return Wl(e,t,n)}throw Error(l(156,t.tag))};var hu=null,mu=null;function yu(e,t,n,r){return new function(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}(e,t,n,r)}function gu(e){return!(!(e=e.prototype)||!e.isReactComponent)}function vu(e,t){var n=e.alternate;return null===n?((n=yu(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=e.childExpirationTime,n.expirationTime=e.expirationTime,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{expirationTime:t.expirationTime,firstContext:t.firstContext,responders:t.responders},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function bu(e,t,n,r,i,o){var a=2;if(r=e,"function"==typeof e)gu(e)&&(a=1);else if("string"==typeof e)a=5;else e:switch(e){case te:return wu(n.children,i,o,t);case le:a=8,i|=7;break;case ne:a=8,i|=1;break;case re:return(e=yu(12,n,t,8|i)).elementType=re,e.type=re,e.expirationTime=o,e;case ue:return(e=yu(13,n,t,i)).type=ue,e.elementType=ue,e.expirationTime=o,e;case se:return(e=yu(19,n,t,i)).elementType=se,e.expirationTime=o,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case ie:a=10;break e;case oe:a=9;break e;case ae:a=11;break e;case ce:a=14;break e;case fe:a=16,r=null;break e;case de:a=22;break e}throw Error(l(130,null==e?e:typeof e,""))}return(t=yu(a,n,t,i)).elementType=e,t.type=r,t.expirationTime=o,t}function wu(e,t,n,r){return(e=yu(7,e,r,t)).expirationTime=n,e}function ku(e,t,n){return(e=yu(6,e,null,t)).expirationTime=n,e}function xu(e,t,n){return(t=yu(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function _u(e,t){var n=e.firstSuspendedTime;return e=e.lastSuspendedTime,0!==n&&n>=t&&e<=t}function Eu(e,t){var n=e.firstSuspendedTime,r=e.lastSuspendedTime;n<t&&(e.firstSuspendedTime=t),(r>t||0===n)&&(e.lastSuspendedTime=t),t<=e.lastPingedTime&&(e.lastPingedTime=0),t<=e.lastExpiredTime&&(e.lastExpiredTime=0)}function Tu(e,t){t>e.firstPendingTime&&(e.firstPendingTime=t);var n=e.firstSuspendedTime;0!==n&&(t>=n?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:t>=e.lastSuspendedTime&&(e.lastSuspendedTime=t+1),t>e.nextKnownPendingLevel&&(e.nextKnownPendingLevel=t))}function Su(e,t){var n=e.lastExpiredTime;(0===n||n>t)&&(e.lastExpiredTime=t)}function Cu(e,t,n,r){var i=t.current,o=Va(),a=ao.suspense;o=Wa(o,i,a);e:if(n){t:{if(Ye(n=n._reactInternalFiber)!==n||1!==n.tag)throw Error(l(170));var u=n;do{switch(u.tag){case 3:u=u.stateNode.context;break t;case 1:if(ci(u.type)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break t}}u=u.return}while(null!==u);throw Error(l(171))}if(1===n.tag){var s=n.type;if(ci(s)){n=pi(n,s,u);break e}}n=u}else n=oi;return null===t.context?t.context=n:t.pendingContext=n,(t=no(o,a)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),ro(i,t),Ha(i,o),o}function Pu(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function Nu(e,t){null!==(e=e.memoizedState)&&null!==e.dehydrated&&e.retryTime<t&&(e.retryTime=t)}function Mu(e,t){Nu(e,t),(e=e.alternate)&&Nu(e,t)}function Ou(e,t,n){var r=new function(e,t,n){this.tag=t,this.current=null,this.containerInfo=e,this.pingCache=this.pendingChildren=null,this.finishedExpirationTime=0,this.finishedWork=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=90,this.lastExpiredTime=this.lastPingedTime=this.nextKnownPendingLevel=this.lastSuspendedTime=this.firstSuspendedTime=this.firstPendingTime=0}(e,t,n=null!=n&&!0===n.hydrate),i=yu(3,null,null,2===t?7:1===t?3:0);r.current=i,i.stateNode=r,eo(i),e[kn]=r.current,n&&0!==t&&function(e,t){var n=Xe(t);_t.forEach((function(e){ft(e,t,n)})),Et.forEach((function(e){ft(e,t,n)}))}(0,9===e.nodeType?e:e.ownerDocument),this._internalRoot=r}function zu(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Au(e,t,n,r,i){var o=n._reactRootContainer;if(o){var l=o._internalRoot;if("function"==typeof i){var a=i;i=function(){var e=Pu(l);a.call(e)}}Cu(t,l,e,i)}else{if(o=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new Ou(e,0,t?{hydrate:!0}:void 0)}(n,r),l=o._internalRoot,"function"==typeof i){var u=i;i=function(){var e=Pu(l);u.call(e)}}Ya((function(){Cu(t,l,e,i)}))}return Pu(l)}function Ru(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!zu(t))throw Error(l(200));return function(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:ee,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}(e,t,null,n)}Ou.prototype.render=function(e){Cu(e,this._internalRoot,null,null)},Ou.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;Cu(null,e,null,(function(){t[kn]=null}))},dt=function(e){if(13===e.tag){var t=Vi(Va(),150,100);Ha(e,t),Mu(e,t)}},pt=function(e){13===e.tag&&(Ha(e,3),Mu(e,3))},ht=function(e){if(13===e.tag){var t=Va();Ha(e,t=Wa(t,e,null)),Mu(e,t)}},C=function(e,t,n){switch(t){case"input":if(Ee(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var i=Tn(r);if(!i)throw Error(l(90));we(r),Ee(r,i)}}}break;case"textarea":Oe(e,n);break;case"select":null!=(t=n.value)&&Pe(e,!!n.multiple,t,!1)}},A=Xa,R=function(e,t,n,r,i){var o=ba;ba|=4;try{return Di(98,e.bind(null,t,n,r,i))}finally{0===(ba=o)&&ji()}},L=function(){0==(49&ba)&&(function(){if(null!==Fa){var e=Fa;Fa=null,e.forEach((function(e,t){Su(t,e),Ba(t)})),ji()}}(),su())},I=function(e,t){var n=ba;ba|=2;try{return e(t)}finally{0===(ba=n)&&ji()}};var Lu={Events:[_n,En,Tn,T,x,zn,function(e){tt(e,On)},O,z,Qt,it,su,{current:!1}]};!function(e){var t=e.findFiberByHostInstance;!function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);hu=function(e){try{t.onCommitFiberRoot(n,e,void 0,64==(64&e.current.effectTag))}catch(e){}},mu=function(e){try{t.onCommitFiberUnmount(n,e)}catch(e){}}}catch(e){}}(i({},e,{overrideHookState:null,overrideProps:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:X.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=Je(e))?null:e.stateNode},findFiberByHostInstance:function(e){return t?t(e):null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null}))}({findFiberByHostInstance:xn,bundleType:0,version:"16.14.0",rendererPackageName:"react-dom"}),t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=Lu,t.createPortal=Ru,t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternalFiber;if(void 0===t){if("function"==typeof e.render)throw Error(l(188));throw Error(l(268,Object.keys(e)))}return null===(e=Je(t))?null:e.stateNode},t.flushSync=function(e,t){if(0!=(48&ba))throw Error(l(187));var n=ba;ba|=1;try{return Di(99,e.bind(null,t))}finally{ba=n,ji()}},t.hydrate=function(e,t,n){if(!zu(t))throw Error(l(200));return Au(null,e,t,!0,n)},t.render=function(e,t,n){if(!zu(t))throw Error(l(200));return Au(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!zu(e))throw Error(l(40));return!!e._reactRootContainer&&(Ya((function(){Au(null,null,e,!1,(function(){e._reactRootContainer=null,e[kn]=null}))})),!0)},t.unstable_batchedUpdates=Xa,t.unstable_createPortal=function(e,t){return Ru(e,t,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!zu(n))throw Error(l(200));if(null==e||void 0===e._reactInternalFiber)throw Error(l(38));return Au(e,t,n,!1,r)},t.version="16.14.0"},52:function(e,t,n){"use strict";e.exports=n(53)},53:function(e,t,n){"use strict";
/** @license React v0.19.1
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r,i,o,l,a;if("undefined"==typeof window||"function"!=typeof MessageChannel){var u=null,s=null,c=function(){if(null!==u)try{var e=t.unstable_now();u(!0,e),u=null}catch(e){throw setTimeout(c,0),e}},f=Date.now();t.unstable_now=function(){return Date.now()-f},r=function(e){null!==u?setTimeout(r,0,e):(u=e,setTimeout(c,0))},i=function(e,t){s=setTimeout(e,t)},o=function(){clearTimeout(s)},l=function(){return!1},a=t.unstable_forceFrameRate=function(){}}else{var d=window.performance,p=window.Date,h=window.setTimeout,m=window.clearTimeout;if("undefined"!=typeof console){var y=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!=typeof y&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills")}if("object"==typeof d&&"function"==typeof d.now)t.unstable_now=function(){return d.now()};else{var g=p.now();t.unstable_now=function(){return p.now()-g}}var v=!1,b=null,w=-1,k=5,x=0;l=function(){return t.unstable_now()>=x},a=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported"):k=0<e?Math.floor(1e3/e):5};var _=new MessageChannel,E=_.port2;_.port1.onmessage=function(){if(null!==b){var e=t.unstable_now();x=e+k;try{b(!0,e)?E.postMessage(null):(v=!1,b=null)}catch(e){throw E.postMessage(null),e}}else v=!1},r=function(e){b=e,v||(v=!0,E.postMessage(null))},i=function(e,n){w=h((function(){e(t.unstable_now())}),n)},o=function(){m(w),w=-1}}function T(e,t){var n=e.length;e.push(t);e:for(;;){var r=n-1>>>1,i=e[r];if(!(void 0!==i&&0<P(i,t)))break e;e[r]=t,e[n]=i,n=r}}function S(e){return void 0===(e=e[0])?null:e}function C(e){var t=e[0];if(void 0!==t){var n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,i=e.length;r<i;){var o=2*(r+1)-1,l=e[o],a=o+1,u=e[a];if(void 0!==l&&0>P(l,n))void 0!==u&&0>P(u,l)?(e[r]=u,e[a]=n,r=a):(e[r]=l,e[o]=n,r=o);else{if(!(void 0!==u&&0>P(u,n)))break e;e[r]=u,e[a]=n,r=a}}}return t}return null}function P(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}var N=[],M=[],O=1,z=null,A=3,R=!1,L=!1,I=!1;function D(e){for(var t=S(M);null!==t;){if(null===t.callback)C(M);else{if(!(t.startTime<=e))break;C(M),t.sortIndex=t.expirationTime,T(N,t)}t=S(M)}}function F(e){if(I=!1,D(e),!L)if(null!==S(N))L=!0,r($);else{var t=S(M);null!==t&&i(F,t.startTime-e)}}function $(e,n){L=!1,I&&(I=!1,o()),R=!0;var r=A;try{for(D(n),z=S(N);null!==z&&(!(z.expirationTime>n)||e&&!l());){var a=z.callback;if(null!==a){z.callback=null,A=z.priorityLevel;var u=a(z.expirationTime<=n);n=t.unstable_now(),"function"==typeof u?z.callback=u:z===S(N)&&C(N),D(n)}else C(N);z=S(N)}if(null!==z)var s=!0;else{var c=S(M);null!==c&&i(F,c.startTime-n),s=!1}return s}finally{z=null,A=r,R=!1}}function j(e){switch(e){case 1:return-1;case 2:return 250;case 5:return 1073741823;case 4:return 1e4;default:return 5e3}}var U=a;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){L||R||(L=!0,r($))},t.unstable_getCurrentPriorityLevel=function(){return A},t.unstable_getFirstCallbackNode=function(){return S(N)},t.unstable_next=function(e){switch(A){case 1:case 2:case 3:var t=3;break;default:t=A}var n=A;A=t;try{return e()}finally{A=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=U,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=A;A=e;try{return t()}finally{A=n}},t.unstable_scheduleCallback=function(e,n,l){var a=t.unstable_now();if("object"==typeof l&&null!==l){var u=l.delay;u="number"==typeof u&&0<u?a+u:a,l="number"==typeof l.timeout?l.timeout:j(e)}else l=j(e),u=a;return e={id:O++,callback:n,priorityLevel:e,startTime:u,expirationTime:l=u+l,sortIndex:-1},u>a?(e.sortIndex=u,T(M,e),null===S(N)&&e===S(M)&&(I?o():I=!0,i(F,u-a))):(e.sortIndex=l,T(N,e),L||R||(L=!0,r($))),e},t.unstable_shouldYield=function(){var e=t.unstable_now();D(e);var n=S(N);return n!==z&&null!==z&&null!==n&&null!==n.callback&&n.startTime<=e&&n.expirationTime<z.expirationTime||l()},t.unstable_wrapCallback=function(e){var t=A;return function(){var n=A;A=t;try{return e.apply(this,arguments)}finally{A=n}}}},61:function(e,t,n){var r=n(62);r&&r.__esModule&&(r=r.default),e.exports="string"==typeof r?r:r.toString()},62:function(e,t,n){(e.exports=n(15)(!1)).push([e.i,".sankeyOuterWrapper{\n    height: 100%;\n    min-height: 600px;\n    min-width: 800px;\n}\n.sankeyWrapper{\n    min-height: 600px;\n    min-width: 800px;\n    height: calc(100% - 30px);\n    margin-top: 10px;\n}\n\n.node,\n.link {\n    transition: 0.2s opacity;\n}\n\n.reminder{\n    width: 100%;\n    text-align: center;\n    color: red;\n    margin-bottom: 10px;\n}\n",""])},63:function(e,t,n){"use strict";n.r(t);var r=n(0),i=n.n(r),o=n(14),l=n.n(o),a=function(e,t){return e<t?-1:e>t?1:e>=t?0:NaN},u=function(e){return 1===e.length&&(e=function(e){return function(t,n){return a(e(t),n)}}(e)),{left:function(t,n,r,i){for(null==r&&(r=0),null==i&&(i=t.length);r<i;){var o=r+i>>>1;e(t[o],n)<0?r=o+1:i=o}return r},right:function(t,n,r,i){for(null==r&&(r=0),null==i&&(i=t.length);r<i;){var o=r+i>>>1;e(t[o],n)>0?i=o:r=o+1}return r}}}(a);u.right,u.left;var s=Array.prototype;s.slice,s.map,Math.sqrt(50),Math.sqrt(10),Math.sqrt(2);var c=function(e,t){var n,r,i=e.length,o=-1;if(null==t){for(;++o<i;)if(null!=(n=e[o])&&n>=n)for(r=n;++o<i;)null!=(n=e[o])&&r>n&&(r=n)}else for(;++o<i;)if(null!=(n=t(e[o],o,e))&&n>=n)for(r=n;++o<i;)null!=(n=t(e[o],o,e))&&r>n&&(r=n);return r},f=function(e,t){var n,r=e.length,i=-1,o=0;if(null==t)for(;++i<r;)(n=+e[i])&&(o+=n);else for(;++i<r;)(n=+t(e[i],i,e))&&(o+=n);return o};function d(){}function p(e,t){var n=new d;if(e instanceof d)e.each((function(e,t){n.set(t,e)}));else if(Array.isArray(e)){var r,i=-1,o=e.length;if(null==t)for(;++i<o;)n.set(i,e[i]);else for(;++i<o;)n.set(t(r=e[i],i,e),r)}else if(e)for(var l in e)n.set(l,e[l]);return n}d.prototype=p.prototype={constructor:d,has:function(e){return"$"+e in this},get:function(e){return this["$"+e]},set:function(e,t){return this["$"+e]=t,this},remove:function(e){var t="$"+e;return t in this&&delete this[t]},clear:function(){for(var e in this)"$"===e[0]&&delete this[e]},keys:function(){var e=[];for(var t in this)"$"===t[0]&&e.push(t.slice(1));return e},values:function(){var e=[];for(var t in this)"$"===t[0]&&e.push(this[t]);return e},entries:function(){var e=[];for(var t in this)"$"===t[0]&&e.push({key:t.slice(1),value:this[t]});return e},size:function(){var e=0;for(var t in this)"$"===t[0]&&++e;return e},empty:function(){for(var e in this)if("$"===e[0])return!1;return!0},each:function(e){for(var t in this)"$"===t[0]&&e(this[t],t.slice(1),this)}};var h=p,m=function(){var e,t,n,r=[],i=[];function o(n,i,l,a){if(i>=r.length)return null!=e&&n.sort(e),null!=t?t(n):n;for(var u,s,c,f=-1,d=n.length,p=r[i++],m=h(),y=l();++f<d;)(c=m.get(u=p(s=n[f])+""))?c.push(s):m.set(u,[s]);return m.each((function(e,t){a(y,t,o(e,i,l,a))})),y}return n={object:function(e){return o(e,0,y,g)},map:function(e){return o(e,0,v,b)},entries:function(e){return function e(n,o){if(++o>r.length)return n;var l,a=i[o-1];return null!=t&&o>=r.length?l=n.entries():(l=[],n.each((function(t,n){l.push({key:n,values:e(t,o)})}))),null!=a?l.sort((function(e,t){return a(e.key,t.key)})):l}(o(e,0,v,b),0)},key:function(e){return r.push(e),n},sortKeys:function(e){return i[r.length-1]=e,n},sortValues:function(t){return e=t,n},rollup:function(e){return t=e,n}}};function y(){return{}}function g(e,t,n){e[t]=n}function v(){return h()}function b(e,t,n){e.set(t,n)}function w(){}var k=h.prototype;function x(e){return e.depth}function _(e,t){return e.sourceLinks.length?e.depth:t-1}function E(e){return function(){return e}}function T(e,t){return C(e.source,t.source)||e.index-t.index}function S(e,t){return C(e.target,t.target)||e.index-t.index}function C(e,t){return e.y0-t.y0}function P(e){return e.value}function N(e){return e.index}function M(e){return e.nodes}function O(e){return e.links}function z(e,t){var n=e.get(t);if(!n)throw new Error("missing: "+t);return n}function A(){var e,t=0,n=0,r=1,i=1,o=24,l=8,u=N,s=_,d=M,p=O,y=6;function g(){var g={nodes:d.apply(null,arguments),links:p.apply(null,arguments)};return function(e){e.nodes.forEach((function(e,t){e.index=t,e.sourceLinks=[],e.targetLinks=[]}));var t=h(e.nodes,u);e.links.forEach((function(e,n){e.index=n;var r=e.source,i=e.target;"object"!=typeof r&&(r=e.source=z(t,r)),"object"!=typeof i&&(i=e.target=z(t,i)),r.sourceLinks.push(e),i.targetLinks.push(e)}))}(g),function(e){e.nodes.forEach((function(e){e.value=Math.max(f(e.sourceLinks,P),f(e.targetLinks,P))}))}(g),function(e){var n,i,l,a=e.nodes.length;for(n=e.nodes,i=[],l=0;n.length;++l,n=i,i=[]){if(l>a)throw new Error("circular link");n.forEach((function(e){e.depth=l,e.sourceLinks.forEach((function(e){i.indexOf(e.target)<0&&i.push(e.target)}))}))}for(n=e.nodes,i=[],l=0;n.length;++l,n=i,i=[]){if(l>a)throw new Error("circular link");n.forEach((function(e){e.height=l,e.targetLinks.forEach((function(e){i.indexOf(e.source)<0&&i.push(e.source)}))}))}var u=(r-t-o)/(l-1);e.nodes.forEach((function(e){e.layer=Math.max(0,Math.min(l-1,Math.floor(s.call(null,e,l)))),e.x1=(e.x0=t+e.layer*u)+o}))}(g),function(t){var r=m().key((function(e){return e.x0})).sortKeys(a).entries(t.nodes).map((function(e){return e.values}));!function(){var o=c(r,(function(e){return(i-n-(e.length-1)*l)/f(e,P)}));r.forEach((function(t){null!=e&&t.sort(e);let r=n;t.forEach((function(e){e.y0=r,e.y1=r+e.value*o,r=e.y1+l}))})),t.links.forEach((function(e){e.width=e.value*o}))}();for(var o=0,u=y;o<u;++o){const e=Math.pow(.99,o),t=(o+1)/u;s(),p(e),h(t),g(t),s(),d(e),h(t),g(t)}function s(){r.forEach((function(e){e.forEach((function(e){e.sourceLinks.sort(S),e.targetLinks.sort(T)}))}))}function d(e){r.slice(1).forEach((function(t){t.forEach((function(t){let n=0,r=0;for(const{source:e,value:i}of t.targetLinks){let o=i*(t.layer-e.layer);n+=b(e,t)*o,r+=o}if(!(r>0))return;let i=(n/r-t.y0)*e;t.y0+=i,t.y1+=i}))}))}function p(e){r.slice(0,-1).reverse().forEach((function(t){t.forEach((function(t){let n=0,r=0;for(const{target:e,value:i}of t.sourceLinks){let o=i*(e.layer-t.layer);n+=w(t,e)*o,r+=o}if(!(r>0))return;let i=(n/r-t.y0)*e;t.y0+=i,t.y1+=i}))}))}function h(t){r.forEach((function(r){var i,o,a,u=n,s=r.length;for(void 0===e&&r.sort(C),a=0;a<s;++a)(o=(u-(i=r[a]).y0)*t)>1e-6&&(i.y0+=o,i.y1+=o),u=i.y1+l}))}function g(t){r.forEach((function(n){var r,o,a,u=i,s=n.length;for(void 0===e&&n.sort(C),a=s-1;a>=0;--a)(o=((r=n[a]).y1-u)*t)>1e-6&&(r.y0-=o,r.y1-=o),u=r.y0-l}))}}(g),v(g),g}function v(e){e.nodes.forEach((function(e){e.sourceLinks.sort(S),e.targetLinks.sort(T)})),e.nodes.forEach((function(e){var t=e.y0,n=t;e.sourceLinks.forEach((function(e){e.y0=t+e.width/2,t+=e.width})),e.targetLinks.forEach((function(e){e.y1=n+e.width/2,n+=e.width}))}))}function b(e,t){let n=e.y0-(e.sourceLinks.length-1)*l/2;for(const{target:r,width:i}of e.sourceLinks){if(r===t)break;n+=i+l}for(const{source:r,width:i}of t.targetLinks){if(r===e)break;n-=i}return n}function w(e,t){let n=t.y0-(t.targetLinks.length-1)*l/2;for(const{source:r,width:i}of t.targetLinks){if(r===e)break;n+=i+l}for(const{target:r,width:i}of e.sourceLinks){if(r===t)break;n-=i}return n}return g.update=function(e){return v(e),e},g.nodeId=function(e){return arguments.length?(u="function"==typeof e?e:E(e),g):u},g.nodeAlign=function(e){return arguments.length?(s="function"==typeof e?e:E(e),g):s},g.nodeSort=function(t){return arguments.length?(e=t,g):e},g.nodeWidth=function(e){return arguments.length?(o=+e,g):o},g.nodePadding=function(e){return arguments.length?(l=+e,g):l},g.nodes=function(e){return arguments.length?(d="function"==typeof e?e:E(e),g):d},g.links=function(e){return arguments.length?(p="function"==typeof e?e:E(e),g):p},g.size=function(e){return arguments.length?(t=n=0,r=+e[0],i=+e[1],g):[r-t,i-n]},g.extent=function(e){return arguments.length?(t=+e[0][0],r=+e[1][0],n=+e[0][1],i=+e[1][1],g):[[t,n],[r,i]]},g.iterations=function(e){return arguments.length?(y=+e,g):y},g}w.prototype=function(e,t){var n=new w;if(e instanceof w)e.each((function(e){n.add(e)}));else if(e){var r=-1,i=e.length;if(null==t)for(;++r<i;)n.add(e[r]);else for(;++r<i;)n.add(t(e[r],r,e))}return n}.prototype={constructor:w,has:k.has,add:function(e){return this["$"+(e+="")]=e,this},remove:k.remove,clear:k.clear,values:k.keys,size:k.size,empty:k.empty,each:k.each};var R=Math.PI,L=2*R,I=L-1e-6;function D(){this._x0=this._y0=this._x1=this._y1=null,this._=""}function F(){return new D}D.prototype=F.prototype={constructor:D,moveTo:function(e,t){this._+="M"+(this._x0=this._x1=+e)+","+(this._y0=this._y1=+t)},closePath:function(){null!==this._x1&&(this._x1=this._x0,this._y1=this._y0,this._+="Z")},lineTo:function(e,t){this._+="L"+(this._x1=+e)+","+(this._y1=+t)},quadraticCurveTo:function(e,t,n,r){this._+="Q"+ +e+","+ +t+","+(this._x1=+n)+","+(this._y1=+r)},bezierCurveTo:function(e,t,n,r,i,o){this._+="C"+ +e+","+ +t+","+ +n+","+ +r+","+(this._x1=+i)+","+(this._y1=+o)},arcTo:function(e,t,n,r,i){e=+e,t=+t,n=+n,r=+r,i=+i;var o=this._x1,l=this._y1,a=n-e,u=r-t,s=o-e,c=l-t,f=s*s+c*c;if(i<0)throw new Error("negative radius: "+i);if(null===this._x1)this._+="M"+(this._x1=e)+","+(this._y1=t);else if(f>1e-6)if(Math.abs(c*a-u*s)>1e-6&&i){var d=n-o,p=r-l,h=a*a+u*u,m=d*d+p*p,y=Math.sqrt(h),g=Math.sqrt(f),v=i*Math.tan((R-Math.acos((h+f-m)/(2*y*g)))/2),b=v/g,w=v/y;Math.abs(b-1)>1e-6&&(this._+="L"+(e+b*s)+","+(t+b*c)),this._+="A"+i+","+i+",0,0,"+ +(c*d>s*p)+","+(this._x1=e+w*a)+","+(this._y1=t+w*u)}else this._+="L"+(this._x1=e)+","+(this._y1=t)},arc:function(e,t,n,r,i,o){e=+e,t=+t,o=!!o;var l=(n=+n)*Math.cos(r),a=n*Math.sin(r),u=e+l,s=t+a,c=1^o,f=o?r-i:i-r;if(n<0)throw new Error("negative radius: "+n);null===this._x1?this._+="M"+u+","+s:(Math.abs(this._x1-u)>1e-6||Math.abs(this._y1-s)>1e-6)&&(this._+="L"+u+","+s),n&&(f<0&&(f=f%L+L),f>I?this._+="A"+n+","+n+",0,1,"+c+","+(e-l)+","+(t-a)+"A"+n+","+n+",0,1,"+c+","+(this._x1=u)+","+(this._y1=s):f>1e-6&&(this._+="A"+n+","+n+",0,"+ +(f>=R)+","+c+","+(this._x1=e+n*Math.cos(i))+","+(this._y1=t+n*Math.sin(i))))},rect:function(e,t,n,r){this._+="M"+(this._x0=this._x1=+e)+","+(this._y0=this._y1=+t)+"h"+ +n+"v"+ +r+"h"+-n+"Z"},toString:function(){return this._}};var $=F,j=Array.prototype.slice,U=function(e){return function(){return e}};function V(e){return e[0]}function W(e){return e[1]}function H(e){return e.source}function q(e){return e.target}function Q(e,t,n,r,i){e.moveTo(t,n),e.bezierCurveTo(t=(t+r)/2,n,t,i,r,i)}function B(e){return[e.source.x1,e.y0]}function K(e){return[e.target.x0,e.y1]}var X=function(){return function(e){var t=H,n=q,r=V,i=W,o=null;function l(){var l,a=j.call(arguments),u=t.apply(this,a),s=n.apply(this,a);if(o||(o=l=$()),e(o,+r.apply(this,(a[0]=u,a)),+i.apply(this,a),+r.apply(this,(a[0]=s,a)),+i.apply(this,a)),l)return o=null,l+""||null}return l.source=function(e){return arguments.length?(t=e,l):t},l.target=function(e){return arguments.length?(n=e,l):n},l.x=function(e){return arguments.length?(r="function"==typeof e?e:U(+e),l):r},l.y=function(e){return arguments.length?(i="function"==typeof e?e:U(+e),l):i},l.context=function(e){return arguments.length?(o=null==e?null:e,l):o},l}(Q).source(B).target(K)},Y=n(1);n(61);class G{constructor(e,t,n){this.nodes=[],this.links=[],this.build(e,t,n)}build(e,t,n){this.dimensions=t.fields.dimension_like,this.measure=t.fields.measure_like[0];const r=new Set;e.forEach(e=>{const t=[];for(const r of this.dimensions){if(null===e[r.name].value&&!n.show_null_points.default)break;t.push(e[r.name].value+"")}t.forEach((n,i)=>{if(i===t.length-1)return;const o=t.slice(i,i+1)[0]+i+"len:"+t.slice(i,i+1)[0].length,l=t.slice(i+1,i+2)[0]+(i+1)+"len:"+t.slice(i+1,i+2)[0].length;r.add(o),r.add(l);const a=[];for(const t in e)e[t].links&&e[t].links.forEach(e=>{a.push(e)});this.links.push({drillLinks:a,source:o,target:l,value:+e[this.measure.name].value})})});const i=Array.from(r);this.links.forEach(e=>{e.source=i.indexOf(e.source),e.target=i.indexOf(e.target)}),this.nodes=i.map(e=>({name:e.slice(0,e.split("len:")[1])}))}getReducedNodesAndLinks(e){const t=new Set,n=this.links.sort((e,t)=>e.value<t.value?1:-1).slice(0,e);n.forEach(e=>{isNaN(e.source)?(t.add(e.source.index),t.add(e.target.index)):(t.add(e.source),t.add(e.target))});const r=[],i=Array.from(t);for(let e=0;e<this.nodes.length;e++)i.includes(e)&&r.push(this.nodes[e]);return{links:n,nodes:r}}}let Z;const J=(e,t)=>{Z&&clearTimeout(Z),Z=setTimeout(()=>{e()},t)},ee={max_link_count:100,color_range:{type:"array",label:"Color Range",display:"colors",default:["#dd3333","#80ce5d","#f78131","#369dc1","#c572d3","#36c1b3","#b57052","#ed69af"]},label_type:{default:"name",display:"select",label:"Label Type",type:"string",values:[{Name:"name"},{"Name (value)":"name_value"}]},show_null_points:{type:"boolean",label:"Plot Null Values",default:!0}};var te=function(e){let t=e.data,n=e.config,o=e.queryResponse;const l=new G(t,o,ee);let a=!1,u=[];if(l.links.length>ee.max_link_count){a=!0;let e=1;for(;ee.max_link_count*e<l.links.length;)u.push(e*ee.max_link_count),e++;u.push("All")}let s=l;ee.max_link_count>0&&(s=l.getReducedNodesAndLinks(ee.max_link_count));let c=s.nodes,f=s.links;const d=Object(r.useRef)(null);let p;const h=()=>{const e=d.current.parentElement.clientWidth-10-10,t=d.current.parentElement.clientHeight-50-10;p=Y.b(d.current).html("").append("svg").attr("width",e).attr("height",t).append("g").attr("transform","translate(10,50)");const r=Y.a().range(n.color_range||ee.color_range.default),i=p.append("defs"),o=A().nodeAlign(x).nodeWidth(10).nodePadding(12).extent([[1,1],[e-1,t-6]]);o.nodeSort(null);let l=p.append("g").attr("class","links").attr("fill","none").attr("stroke","#fff").selectAll("path"),a=p.append("g").attr("class","nodes").attr("font-family","sans-serif").attr("font-size",10).selectAll("g");const u={nodes:[],links:[]};u.nodes=c,u.links=f,o(u),(l=l.data(u.links).enter().append("path").attr("class","link").attr("d",(function(e){return"M-10,-10"+X()(e)})).style("opacity",.4).attr("stroke-width",(function(e){return Math.max(1,e.width)})).on("mouseenter",(function(e,t){m("link","enter",e,t)})).on("click",(function(e,t){const n={pageX:e.pageX,pageY:e.pageY};LookerCharts.Utils.openDrillMenu({links:t.drillLinks,event:n})})).on("mouseleave",(function(e,t){m("link","leave")}))).style("stroke",(function(e,t){const n="gradient"+t,o=r(e.source.name.replace(/ .*/,"")),l=r(e.target.name.replace(/ .*/,""));return i.append("linearGradient").attr("id",n).selectAll("stop").data([{offset:"10%",color:o},{offset:"90%",color:l}]).enter().append("stop").attr("offset",(function(e){return e.offset})).attr("stop-color",(function(e){return e.color})),"url(#"+n+")"})),(a=a.data(u.nodes).enter().append("g").attr("class","node").on("mouseenter",(function(e,t){m("mouse","enter",e,t)})).on("mouseleave",(function(e,t){m("mouse","leave",e,t)}))).append("rect").attr("x",(function(e){return e.x0})).attr("y",(function(e){return e.y0})).attr("height",(function(e){return Math.abs(e.y1-e.y0)})).attr("width",(function(e){return Math.abs(e.x1-e.x0)})).attr("fill",(function(e){return r(e.name.replace(/ .*/,""))})).attr("stroke","#555"),a.append("text").attr("x",(function(e){return e.x0-6})).attr("y",(function(e){return(e.y1+e.y0)/2})).attr("dy","0.35em").style("font-weight","bold").attr("text-anchor","end").style("fill","#222").text((function(e){switch(ee.label_type.default){case"name":return e.name;case"name_value":return`${e.name} (${e.value})`;default:return""}})).filter((function(t){return t.x0<e/2})).attr("x",(function(e){return e.x1+6})).attr("text-anchor","start"),a.append("title").text((function(e){return e.name+"\n"+e.value}))},m=(e,t,n,r)=>{J(()=>{Y.c(".node").style("opacity",1),Y.c(".link").style("opacity",.4),"enter"===t&&("link"===e?(p.selectAll(".link").style("opacity",.05),Y.b(n.target).style("opacity",.7),p.selectAll(".node").style("opacity",(function(e){return e===r.source||e===r.target?1:.5}))):p.selectAll(".link").style("opacity",(function(e){return e.source===r||e.target===r?.7:.05})))},100)};return J(()=>{h(),e.done&&e.done()},1e3),i.a.createElement("div",{className:"sankeyOuterWrapper"},!1,a&&i.a.createElement("div",null,"Show Links Up To: ",i.a.createElement("select",{onChange:e=>{s="All"===e.target.value?l:l.getReducedNodesAndLinks(parseInt(e.target.value)),c=s.nodes,f=s.links,h()}},u.map((e,t)=>i.a.createElement("option",{value:e,key:t},e)))),i.a.createElement("div",{className:"sankeyWrapper",ref:d}))},ne=Object.defineProperty,re=Object.defineProperties,ie=Object.getOwnPropertyDescriptors,oe=Object.getOwnPropertySymbols,le=Object.prototype.hasOwnProperty,ae=Object.prototype.propertyIsEnumerable,ue=(e,t,n)=>t in e?ne(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n;looker.plugins.visualizations.add({id:"sankey_graph",label:"SanKey",options:{font_size:{type:"string",label:"Font Size",values:[{Large:"large"},{Small:"small"}],display:"radio",default:"large"}},create:function(e,t){e.innerHTML="\n      <style>\n      .outer_wrapper{\n        height: 100%;\n      }\n      .outer_wrapper .inner_wrapper{\n        height: 100%;\n      }\n    .sankeyOuterWrapper{\n    height: 100%;\n    min-height: 600px;\n    min-width: 800px;\n}\n.sankeyWrapper{\n     min-height: 600px;\n    min-width: 800px;\n    height: calc(100% - 30px);\n    margin-top: 10px;\n}\n\n.node,\n.link {\n    transition: 0.2s opacity;\n}\n\n.reminder{\n    width: 100%;\n    text-align: center;\n    color: red;\n    margin-bottom: 10px;\n}\n\n      </style>\n    ";let n=e.appendChild(document.createElement("div"));n.className="outer_wrapper",this._textElement=n.appendChild(document.createElement("div")),this._textElement.className="inner_wrapper"},updateAsync:function(e,t,n,r,o,a){if(this.clearErrors(),((e,t,n)=>{const r=(t,n,r,i,o)=>!(!e.addError||!e.clearErrors||(r<i?(e.addError({title:`Not Enough ${n}s`,message:`This visualization requires ${i===o?"exactly":"at least"} ${i} ${n.toLowerCase()}${1===i?"":"s"}.`,group:t}),1):r>o?(e.addError({title:`Too Many ${n}s`,message:`This visualization requires ${i===o?"exactly":"no more than"} ${o} ${n.toLowerCase()}${1===i?"":"s"}.`,group:t}),1):(e.clearErrors(t),0))),{pivots:i,dimensions:o,measure_like:l,measures:a}=t.fields;return r("pivot-req","Pivot",i.length,n.min_pivots,n.max_pivots)&&r("dim-req","Dimension",o.length,n.min_dimensions,n.max_dimensions)&&r("mes-req","Measure",a.length,n.min_measures,n.max_measures)})(this,r,{min_pivots:0,max_pivots:0,min_dimensions:2,max_dimensions:void 0,min_measures:1,max_measures:1})){if(this.addError&&this.clearErrors){if(0===e.length)return doneRendering(),void this.addError({group:"No Results",title:"No Results"});this.clearErrors("config")}this.chart=l.a.render(i.a.createElement(te,((e,t)=>re(e,ie(t)))(((e,t)=>{for(var n in t||(t={}))le.call(t,n)&&ue(e,n,t[n]);if(oe)for(var n of oe(t))ae.call(t,n)&&ue(e,n,t[n]);return e})({},{data:e,config:n,queryResponse:r}),{done:()=>{setTimeout(()=>{a()},1e3)}})),this._textElement)}}})}})}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=sankey_graph.js.map